{
  "pipes": [],
  "interfaces": [],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "AccessibilityDemo",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6\">\n        <div class=\"bg-blue-50 p-4 rounded-lg\">\n          <h3 class=\"font-medium text-blue-900 mb-2\">Accessibility Features Demo</h3>\n          <p class=\"text-blue-700 text-sm mb-4\">\n            Try navigating with keyboard (Tab/Space) or screen reader to experience accessibility features.\n          </p>\n        </div>\n        \n        <fieldset class=\"space-y-4\">\n          <legend class=\"font-medium text-gray-900\">Subscription Preferences</legend>\n          \n          <bb-checkbox \n            label=\"Weekly newsletter\"\n            helperText=\"Receive our weekly digest every Monday\"\n            [checked]=\"true\"\n            [required]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Product updates\"\n            helperText=\"Get notified about new features and improvements\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing communications\"\n            helperText=\"Promotional offers and special deals\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Terms and Conditions\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </fieldset>\n        \n        <div class=\"text-sm text-gray-600 space-y-2\">\n          <p><strong>Keyboard Navigation:</strong></p>\n          <ul class=\"list-disc list-inside space-y-1 ml-4\">\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Tab</kbd> to navigate between checkboxes</li>\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Space</kbd> to toggle checkbox state</li>\n            <li>Screen readers will announce label, state, and helper text</li>\n          </ul>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          { id: 'color-contrast', enabled: true },\n          { id: 'keyboard-navigation', enabled: true },\n          { id: 'aria-valid-attr', enabled: true }\n        ]\n      }\n    },\n    docs: {\n      description: {\n        story: `\n### Accessibility Demonstration\n\nThis story showcases the checkbox component's accessibility features:\n\n- **Keyboard Navigation**: Full keyboard support with Tab and Space keys\n- **Screen Reader Support**: Proper ARIA attributes and semantic HTML\n- **Focus Management**: Clear visual focus indicators\n- **Color Contrast**: WCAG compliant color combinations\n- **Error Announcements**: Live regions for dynamic state changes\n- **Required Field Indicators**: Visual and programmatic indication\n\nAll checkboxes are properly labeled and associated with their help text and error messages.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "AccessibilityStates",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" ariaLabel=\"Logo ByteBank Pro\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\" [isDecorative]=\"true\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllSizes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button size=\"sm\" variant=\"blue\">Small</bb-button>\n        <bb-button size=\"md\" variant=\"blue\">Medium</bb-button>\n        <bb-button size=\"lg\" variant=\"blue\">Large</bb-button>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllSizes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"lg\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button variant=\"dark\">Dark</bb-button>\n        <bb-button variant=\"blue\">Blue</bb-button>\n        <bb-button variant=\"green\">Green</bb-button>\n        <bb-button variant=\"orange\">Orange</bb-button>\n        <bb-button variant=\"outlineGreen\">Outline Green</bb-button>\n        <bb-button variant=\"outlineOrange\">Outline Orange</bb-button>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Visual Variants</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Default variant\" variant=\"default\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Success variant\" variant=\"success\" [checked]=\"true\" successMessage=\"Validated successfully\"></bb-checkbox>\n            <bb-checkbox label=\"Error variant\" variant=\"error\" [checked]=\"false\" [required]=\"true\" errorMessage=\"This field is required\"></bb-checkbox>\n            <bb-checkbox label=\"Warning variant\" variant=\"warning\" [checked]=\"true\" helperText=\"Proceed with caution\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Sizes</h3>\n          <div class=\"flex items-center gap-6\">\n            <bb-checkbox label=\"Small\" size=\"sm\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Medium\" size=\"md\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Large\" size=\"lg\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">States</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Unchecked\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Checked\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Indeterminate\" [indeterminate]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled Checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Readonly\" [readonly]=\"true\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'This story displays all available variants, sizes, and states of the checkbox component for easy comparison.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-4 items-end p-8 w-full h-screen relative\">\n        <bb-toast message=\"Mensagem de Sucesso!\" variant=\"success\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Erro!\" variant=\"error\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Informação!\" variant=\"info\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n      </div>\n    `\n  }),\n  parameters: {\n    // Override default layout for this specific story to display all toasts\n    layout: 'padded'\n  }\n}"
      },
      {
        "name": "AutoClosing",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Este toast fechará em 3 segundos.',\n    variant: 'success',\n    duration: 3000\n  }\n}"
      },
      {
        "name": "CustomStyling",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" className=\"opacity-75\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\" className=\"drop-shadow-lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\" className=\"w-24 md:w-32 lg:w-40\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Accept terms and conditions',\n    checked: false,\n    variant: 'default',\n    size: 'md'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    placeholder: 'Digite seu nome'\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    isDecorative: false\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    message: 'Esta é uma notificação padrão.',\n    variant: 'info',\n    show: true,\n    duration: 0\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-toast ${argsToTemplate(args)}></bb-toast>`\n  })\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Disabled Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Campo desabilitado',\n    placeholder: 'Este campo está desabilitado',\n    disabled: true,\n    value: 'Valor desabilitado'\n  }\n}"
      },
      {
        "name": "DisabledState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <bb-checkbox label=\"Disabled unchecked\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled indeterminate\" [disabled]=\"true\" [indeterminate]=\"true\"></bb-checkbox>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows disabled checkboxes in different states. Disabled checkboxes cannot be interacted with.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Email",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'email',\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    prefixIcon: Mail\n  }\n}"
      },
      {
        "name": "Error",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'error',\n    label: 'Campo com erro',\n    value: 'dados-incorretos',\n    errorMessage: 'Por favor, verifique os dados informados.'\n  }\n}"
      },
      {
        "name": "Error",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Ocorreu um erro ao processar a solicitação.',\n    variant: 'error'\n  }\n}"
      },
      {
        "name": "ErrorState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Required agreement',\n    errorMessage: 'You must accept the terms to continue',\n    checked: false,\n    variant: 'error',\n    size: 'md',\n    required: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates error state with validation message. Used when user input is invalid or required field is empty.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "FormIntegration",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <form class=\"space-y-6 max-w-md\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Account Preferences</h3>\n          \n          <bb-checkbox \n            label=\"Email notifications\"\n            helperText=\"Receive updates about your account\"\n            [checked]=\"true\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"SMS notifications\"\n            helperText=\"Get important alerts via text message\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing emails\"\n            helperText=\"Receive promotional content and offers\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </div>\n        \n        <div class=\"border-t pt-4\">\n          <bb-checkbox \n            label=\"I agree to the Terms of Service\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"I agree to the Privacy Policy\"\n            [required]=\"true\"\n            [checked]=\"true\">\n          </bb-checkbox>\n        </div>\n        \n        <button \n          type=\"submit\" \n          class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n          disabled>\n          Save Preferences\n        </button>\n      </form>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Form Integration Example\n\nDemonstrates how checkboxes work within forms, showing:\n- Different variants for different types of choices\n- Required field validation\n- Helper text for guidance\n- Error states for invalid inputs\n- Grouped related options\n\nThis pattern is common in settings pages, registration forms, and preference panels.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "InContext",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Info",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Informação importante para o usuário.',\n    variant: 'info'\n  }\n}"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'lg',\n    label: 'Tamanho grande',\n    placeholder: 'Input grande'\n  }\n}"
      },
      {
        "name": "Loading",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: true,\n    disabled: false,\n    loadingText: 'Carregando, aguarde...'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Loading Button</bb-button>`\n  })\n}"
      },
      {
        "name": "LoadingState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Processing selection...',\n    disabled: true,\n    helperText: 'Please wait while we validate your choice',\n    variant: 'default',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Represents a checkbox in a loading/processing state where user interaction is temporarily disabled.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "LoginForm",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4 w-80\">\n        <bb-input\n          label=\"Email\"\n          type=\"email\"\n          placeholder=\"seu@email.com\"\n          prefixIcon=\"mail\"\n          required=\"true\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Senha\"\n          type=\"password\"\n          placeholder=\"Digite sua senha\"\n          showPasswordToggle=\"true\"\n          required=\"true\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Medium",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'md',\n    label: 'Tamanho médio',\n    placeholder: 'Input médio (padrão)'\n  }\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonComponent>",
        "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Um componente de botão flexível com múltiplas variantes, tamanhos e estados, seguindo as diretrizes de acessibilidade.'\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'dark',\n        'blue',\n        'green',\n        'orange',\n        'outlineGreen',\n        'outlineOrange'\n      ] as ButtonVariant[],\n      description: 'Variante visual do botão'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'] as ButtonSize[],\n      description: 'Tamanho do botão'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'Tipo HTML do botão'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Estado de carregamento do botão'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Se o botão está desabilitado'\n    },\n    className: {\n      control: 'text',\n      description: 'Classes CSS adicionais'\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Label acessível do botão'\n    },\n    ariaDescribedBy: {\n      control: 'text',\n      description: 'ID do elemento que descreve o botão'\n    },\n    ariaPressed: {\n      control: 'boolean',\n      description: 'Estado pressionado para botões toggle'\n    },\n    role: {\n      control: 'text',\n      description: 'Role ARIA customizado'\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Texto para leitores de tela durante carregamento'\n    },\n    buttonClick: {\n      action: 'clicked',\n      description: 'Evento emitido quando o botão é clicado'\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<CheckboxComponent>",
        "defaultValue": "{\n  title: 'Components/Inputs/Checkbox',\n  component: CheckboxComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Description\n\nThe Checkbox component provides a selectable input for binary choices or multiple selections in forms and interfaces.\n\n## When to Use\n\n- For binary choices (agree/disagree, yes/no)\n- For multiple selections from a list of options\n- To confirm actions or acknowledge terms\n- In forms requiring user consent or preference selection\n\n## Features\n\n- Support for checked, unchecked, and indeterminate states\n- Multiple visual variants (default, success, error, warning)\n- Different sizes (sm, md, lg)\n- Accessibility compliant with ARIA attributes\n- Form integration with validation states\n- Helper text and error message support\n\n## Accessibility\n\n- Supports keyboard navigation (Space to toggle)\n- Implements proper ARIA attributes and roles\n- Screen reader friendly with descriptive labels\n- Visual focus indicators for keyboard users\n- Color contrast compliant in all states\n- Live regions for dynamic state announcements\n        `\n      }\n    }\n  },\n  argTypes: {\n    checked: {\n      description: 'Whether the checkbox is checked',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    indeterminate: {\n      description: 'Whether the checkbox is in indeterminate state (partially checked)',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    variant: {\n      description: 'Visual variant of the checkbox',\n      options: ['default', 'success', 'error', 'warning'],\n      control: { \n        type: 'select',\n        labels: {\n          default: '🔵 Default',\n          success: '✅ Success',\n          error: '❌ Error',\n          warning: '⚠️ Warning'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxVariant' },\n        defaultValue: { summary: 'default' }\n      }\n    },\n    size: {\n      description: 'Size of the checkbox',\n      options: ['sm', 'md', 'lg'],\n      control: { \n        type: 'radio',\n        labels: {\n          sm: '📦 Small',\n          md: '📋 Medium',\n          lg: '📊 Large'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxSize' },\n        defaultValue: { summary: 'md' }\n      }\n    },\n    disabled: {\n      description: 'Whether the checkbox is disabled',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    readonly: {\n      description: 'Whether the checkbox is readonly',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    required: {\n      description: 'Whether the checkbox is required',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    label: {\n      description: 'Label text for the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    helperText: {\n      description: 'Helper text displayed below the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    errorMessage: {\n      description: 'Error message displayed when variant is error',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    successMessage: {\n      description: 'Success message displayed when variant is success',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<InputComponent>",
        "defaultValue": "{\n  title: 'Components/Input',\n  component: InputComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A versatile input component with support for different variants, sizes, icons, and accessibility features.'\n      }\n    }\n  },\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['text', 'password', 'email', 'number', 'tel', 'url', 'search'],\n      description: 'The input type'\n    },\n    variant: {\n      control: 'select',\n      options: ['default', 'success', 'error', 'warning'],\n      description: 'Visual variant of the input'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      description: 'Size of the input'\n    },\n    placeholder: {\n      control: 'text',\n      description: 'Placeholder text'\n    },\n    value: {\n      control: 'text',\n      description: 'Input value'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the input is disabled'\n    },\n    readonly: {\n      control: 'boolean',\n      description: 'Whether the input is readonly'\n    },\n    required: {\n      control: 'boolean',\n      description: 'Whether the input is required'\n    },\n    label: {\n      control: 'text',\n      description: 'Label text'\n    },\n    helperText: {\n      control: 'text',\n      description: 'Helper text below the input'\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Error message (shown when variant is error)'\n    },\n    successMessage: {\n      control: 'text',\n      description: 'Success message (shown when variant is success)'\n    },\n    showPasswordToggle: {\n      control: 'boolean',\n      description: 'Show password toggle button (for password inputs)'\n    },\n    prefixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the start'\n    },\n    suffixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the end'\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes'\n    }\n  },\n  args: {\n    type: 'text',\n    variant: 'default',\n    size: 'md',\n    placeholder: 'Digite algo...',\n    value: '',\n    disabled: false,\n    readonly: false,\n    required: false,\n    showPasswordToggle: false\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<LogoComponent>",
        "defaultValue": "{\n  title: 'Components/Logo',\n  component: LogoComponent,\n  parameters: {\n    layout: 'centered',\n    badges: ['stable', 'accessible']\n  },\n  argTypes: {\n    variant: {\n      options: ['full', 'icon'],\n      control: { type: 'radio' }\n    },\n    size: {\n      options: ['sm', 'md', 'lg'],\n      control: { type: 'radio' }\n    },\n    className: {\n      control: { type: 'text' }\n    },\n    ariaLabel: {\n      control: { type: 'text' }\n    },\n    isDecorative: {\n      control: { type: 'boolean' }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ToastComponent>",
        "defaultValue": "{\n  title: 'Components/Toast', //\n  component: ToastComponent, //\n  parameters: {\n    layout: 'fullscreen', // Toast is positioned, so fullscreen might be better for context\n    docs: {\n      description: {\n        component:\n          'Um componente de notificação que exibe mensagens temporárias ao usuário, com suporte a diferentes tipos de variantes (sucesso, erro, informação) e fechamento automático ou manual.' //\n      }\n    }\n  },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `\n      <div style=\"position: relative; height: 150px;\">\n      ${story}\n      </div>`\n    )\n  ],\n  argTypes: {\n    message: {\n      control: 'text',\n      description: 'A mensagem a ser exibida no toast.',\n      defaultValue: 'Esta é uma mensagem de notificação.'\n    },\n    variant: {\n      control: 'select',\n      options: ['success', 'error', 'info'],\n      description: 'Define a variação visual do toast.',\n      defaultValue: 'info'\n    },\n    show: {\n      control: 'boolean',\n      description: 'Controla a visibilidade do toast.',\n      defaultValue: true\n    },\n    duration: {\n      control: 'number',\n      description:\n        'Duração em milissegundos para o toast fechar automaticamente. 0 para não fechar.',\n      defaultValue: 0\n    },\n    toastClose: {\n      action: 'toastClosed',\n      description: 'Evento emitido quando o toast é fechado.'\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "Number",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'number',\n    label: 'Idade',\n    placeholder: '25'\n  }\n}"
      },
      {
        "name": "OutlineGreen",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'outlineGreen',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Green</bb-button>`\n  })\n}"
      },
      {
        "name": "OutlineOrange",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'outlineOrange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Orange</bb-button>`\n  })\n}"
      },
      {
        "name": "Password",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'password',\n    label: 'Senha',\n    placeholder: 'Digite sua senha',\n    showPasswordToggle: true,\n    helperText: 'A senha deve ter pelo menos 8 caracteres'\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Playground checkbox',\n    helperText: 'Customize all properties using the controls below',\n    checked: false,\n    indeterminate: false,\n    variant: 'default',\n    size: 'md',\n    disabled: false,\n    readonly: false,\n    required: false,\n    errorMessage: '',\n    successMessage: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Interactive playground to test all checkbox properties and configurations. Use the controls panel to experiment with different combinations.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    ariaLabel: undefined,\n    isDecorative: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-logo ${argsToTemplate(args)}></bb-logo>`\n  })\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    message: 'Mensagem customizável do Toast.',\n    variant: 'info',\n    show: true,\n    duration: 5000\n  }\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": ".storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  }\n}"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Primary Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Readonly",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Campo somente leitura',\n    readonly: true,\n    value: 'Este valor não pode ser editado'\n  }\n}"
      },
      {
        "name": "Required",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Campo obrigatório',\n    placeholder: 'Este campo é obrigatório',\n    required: true,\n    helperText: 'Este campo deve ser preenchido'\n  }\n}"
      },
      {
        "name": "ResponsiveLayout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"w-full max-w-4xl mx-auto\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Basic Options</h4>\n            <bb-checkbox label=\"Enable notifications\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Auto-save changes\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Show preview\" [checked]=\"true\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Privacy Settings</h4>\n            <bb-checkbox label=\"Make profile public\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Allow contact from others\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Show online status\" [checked]=\"false\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Advanced Features</h4>\n            <bb-checkbox label=\"Enable beta features\" variant=\"warning\" [checked]=\"false\" helperText=\"May be unstable\"></bb-checkbox>\n            <bb-checkbox label=\"Developer mode\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Debug logging\" [checked]=\"false\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'responsive'\n    },\n    docs: {\n      description: {\n        story: `\n### Responsive Layout\n\nThis story demonstrates how checkboxes adapt to different screen sizes using responsive grid layouts.\nThe layout automatically adjusts from single column on mobile to three columns on larger screens.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "ResponsiveLayout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <div class=\"md:hidden\">\n          <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        </div>\n        <div class=\"hidden md:block\">\n          <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        </div>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Search",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'search',\n    placeholder: 'Buscar...',\n    prefixIcon: SearchIcon\n  }\n}"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'dark',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Secondary Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'sm',\n    label: 'Tamanho pequeno',\n    placeholder: 'Input pequeno'\n  }\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'green',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Success Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'success',\n    label: 'Campo válido',\n    value: 'Dados corretos',\n    successMessage: 'Perfeito! Os dados estão corretos.'\n  }\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Operação realizada com sucesso!',\n    variant: 'success',\n    duration: 0\n  }\n}"
      },
      {
        "name": "ToggleButton",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaPressed: false,\n    ariaLabel: 'Toggle notifications'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>🔔 Notifications</bb-button>`\n  })\n}"
      },
      {
        "name": "ValidationStates",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6 w-80\">\n        <bb-input\n          label=\"Campo válido\"\n          variant=\"success\"\n          value=\"dados@corretos.com\"\n          successMessage=\"Email válido!\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com erro\"\n          variant=\"error\"\n          value=\"email-inválido\"\n          errorMessage=\"Por favor, insira um email válido.\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com aviso\"\n          variant=\"warning\"\n          value=\"exemplo@teste.com\"\n          helperText=\"Certifique-se de que este email está correto.\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'orange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Warning Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'warning',\n    label: 'Campo com aviso',\n    value: 'dados-atenção',\n    helperText: 'Atenção: verifique se os dados estão corretos.'\n  }\n}"
      },
      {
        "name": "WithAccessibility",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaLabel: 'Save document',\n    ariaDescribedBy: 'save-help-text'\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div>\n        <bb-button ${argsToTemplate(args)}>Save</bb-button>\n        <p id=\"save-help-text\" style=\"margin-top: 0.5rem; font-size: 0.875rem; color: #6b7280;\">\n          This will save your current document to the cloud\n        </p>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "WithHelperText",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    helperText: 'Utilizaremos este email para entrar em contato'\n  }\n}"
      },
      {
        "name": "WithInteractions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    props: {\n      items: [\n        { id: 1, label: 'Item 1', checked: false },\n        { id: 2, label: 'Item 2', checked: true },\n        { id: 3, label: 'Item 3', checked: false }\n      ],\n      selectAll: false,\n      onItemChange(index: number) {\n        this['items'][index].checked = !this['items'][index].checked;\n        this['updateSelectAll']();\n      },\n      onSelectAllChange() {\n        this['selectAll'] = !this['selectAll'];\n        this['items'].forEach((item: any) => item.checked = this['selectAll']);\n      },\n      updateSelectAll() {\n        const checkedCount = this['items'].filter((item: any) => item.checked).length;\n        this['selectAll'] = checkedCount === this['items'].length;\n      }\n    },\n    template: `\n      <div class=\"space-y-4\">\n        <bb-checkbox \n          label=\"Select All\" \n          [checked]=\"selectAll\"\n          [indeterminate]=\"items.filter(item => item.checked).length > 0 && items.filter(item => item.checked).length < items.length\"\n          (click)=\"onSelectAllChange()\"\n          class=\"font-medium\">\n        </bb-checkbox>\n        \n        <div class=\"pl-6 space-y-2\">\n          @for (item of items; track item.id) {\n            <bb-checkbox \n              [label]=\"item.label\"\n              [checked]=\"item.checked\"\n              (click)=\"onItemChange($index)\">\n            </bb-checkbox>\n          }\n        </div>\n        \n        <div class=\"text-sm text-gray-600 mt-4\">\n          Selected: {{ items.filter(item => item.checked).length }} of {{ items.length }}\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Interactive Multi-Selection\n\nThis story demonstrates a complex interaction pattern with a \"Select All\" checkbox that:\n- Shows checked state when all items are selected\n- Shows indeterminate state when some items are selected\n- Shows unchecked state when no items are selected\n- Updates child checkboxes when toggled\n\nPerfect for implementing bulk actions or grouped selections.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithLabel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Nome completo',\n    placeholder: 'Digite seu nome completo'\n  }\n}"
      },
      {
        "name": "WithPrefixIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Usuário',\n    placeholder: 'Digite seu usuário',\n    prefixIcon: UserRoundIcon\n  }\n}"
      },
      {
        "name": "WithSuffixIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Website',\n    placeholder: 'https://exemplo.com',\n    suffixIcon: Link\n  }\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ButtonComponent>",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<CheckboxComponent>",
        "file": "src/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<InputComponent>",
        "file": "src/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<LogoComponent>",
        "file": "src/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ToastComponent>",
        "file": "src/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/checkbox/checkbox.component.stories.ts": [
        {
          "name": "AccessibilityDemo",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6\">\n        <div class=\"bg-blue-50 p-4 rounded-lg\">\n          <h3 class=\"font-medium text-blue-900 mb-2\">Accessibility Features Demo</h3>\n          <p class=\"text-blue-700 text-sm mb-4\">\n            Try navigating with keyboard (Tab/Space) or screen reader to experience accessibility features.\n          </p>\n        </div>\n        \n        <fieldset class=\"space-y-4\">\n          <legend class=\"font-medium text-gray-900\">Subscription Preferences</legend>\n          \n          <bb-checkbox \n            label=\"Weekly newsletter\"\n            helperText=\"Receive our weekly digest every Monday\"\n            [checked]=\"true\"\n            [required]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Product updates\"\n            helperText=\"Get notified about new features and improvements\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing communications\"\n            helperText=\"Promotional offers and special deals\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Terms and Conditions\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </fieldset>\n        \n        <div class=\"text-sm text-gray-600 space-y-2\">\n          <p><strong>Keyboard Navigation:</strong></p>\n          <ul class=\"list-disc list-inside space-y-1 ml-4\">\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Tab</kbd> to navigate between checkboxes</li>\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Space</kbd> to toggle checkbox state</li>\n            <li>Screen readers will announce label, state, and helper text</li>\n          </ul>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          { id: 'color-contrast', enabled: true },\n          { id: 'keyboard-navigation', enabled: true },\n          { id: 'aria-valid-attr', enabled: true }\n        ]\n      }\n    },\n    docs: {\n      description: {\n        story: `\n### Accessibility Demonstration\n\nThis story showcases the checkbox component's accessibility features:\n\n- **Keyboard Navigation**: Full keyboard support with Tab and Space keys\n- **Screen Reader Support**: Proper ARIA attributes and semantic HTML\n- **Focus Management**: Clear visual focus indicators\n- **Color Contrast**: WCAG compliant color combinations\n- **Error Announcements**: Live regions for dynamic state changes\n- **Required Field Indicators**: Visual and programmatic indication\n\nAll checkboxes are properly labeled and associated with their help text and error messages.\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Visual Variants</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Default variant\" variant=\"default\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Success variant\" variant=\"success\" [checked]=\"true\" successMessage=\"Validated successfully\"></bb-checkbox>\n            <bb-checkbox label=\"Error variant\" variant=\"error\" [checked]=\"false\" [required]=\"true\" errorMessage=\"This field is required\"></bb-checkbox>\n            <bb-checkbox label=\"Warning variant\" variant=\"warning\" [checked]=\"true\" helperText=\"Proceed with caution\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Sizes</h3>\n          <div class=\"flex items-center gap-6\">\n            <bb-checkbox label=\"Small\" size=\"sm\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Medium\" size=\"md\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Large\" size=\"lg\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">States</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Unchecked\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Checked\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Indeterminate\" [indeterminate]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled Checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Readonly\" [readonly]=\"true\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'This story displays all available variants, sizes, and states of the checkbox component for easy comparison.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Accept terms and conditions',\n    checked: false,\n    variant: 'default',\n    size: 'md'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  })\n}"
        },
        {
          "name": "DisabledState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <bb-checkbox label=\"Disabled unchecked\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled indeterminate\" [disabled]=\"true\" [indeterminate]=\"true\"></bb-checkbox>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows disabled checkboxes in different states. Disabled checkboxes cannot be interacted with.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ErrorState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Required agreement',\n    errorMessage: 'You must accept the terms to continue',\n    checked: false,\n    variant: 'error',\n    size: 'md',\n    required: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates error state with validation message. Used when user input is invalid or required field is empty.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "FormIntegration",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <form class=\"space-y-6 max-w-md\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Account Preferences</h3>\n          \n          <bb-checkbox \n            label=\"Email notifications\"\n            helperText=\"Receive updates about your account\"\n            [checked]=\"true\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"SMS notifications\"\n            helperText=\"Get important alerts via text message\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing emails\"\n            helperText=\"Receive promotional content and offers\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </div>\n        \n        <div class=\"border-t pt-4\">\n          <bb-checkbox \n            label=\"I agree to the Terms of Service\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"I agree to the Privacy Policy\"\n            [required]=\"true\"\n            [checked]=\"true\">\n          </bb-checkbox>\n        </div>\n        \n        <button \n          type=\"submit\" \n          class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n          disabled>\n          Save Preferences\n        </button>\n      </form>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Form Integration Example\n\nDemonstrates how checkboxes work within forms, showing:\n- Different variants for different types of choices\n- Required field validation\n- Helper text for guidance\n- Error states for invalid inputs\n- Grouped related options\n\nThis pattern is common in settings pages, registration forms, and preference panels.\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "LoadingState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Processing selection...',\n    disabled: true,\n    helperText: 'Please wait while we validate your choice',\n    variant: 'default',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Represents a checkbox in a loading/processing state where user interaction is temporarily disabled.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<CheckboxComponent>",
          "defaultValue": "{\n  title: 'Components/Inputs/Checkbox',\n  component: CheckboxComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Description\n\nThe Checkbox component provides a selectable input for binary choices or multiple selections in forms and interfaces.\n\n## When to Use\n\n- For binary choices (agree/disagree, yes/no)\n- For multiple selections from a list of options\n- To confirm actions or acknowledge terms\n- In forms requiring user consent or preference selection\n\n## Features\n\n- Support for checked, unchecked, and indeterminate states\n- Multiple visual variants (default, success, error, warning)\n- Different sizes (sm, md, lg)\n- Accessibility compliant with ARIA attributes\n- Form integration with validation states\n- Helper text and error message support\n\n## Accessibility\n\n- Supports keyboard navigation (Space to toggle)\n- Implements proper ARIA attributes and roles\n- Screen reader friendly with descriptive labels\n- Visual focus indicators for keyboard users\n- Color contrast compliant in all states\n- Live regions for dynamic state announcements\n        `\n      }\n    }\n  },\n  argTypes: {\n    checked: {\n      description: 'Whether the checkbox is checked',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    indeterminate: {\n      description: 'Whether the checkbox is in indeterminate state (partially checked)',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    variant: {\n      description: 'Visual variant of the checkbox',\n      options: ['default', 'success', 'error', 'warning'],\n      control: { \n        type: 'select',\n        labels: {\n          default: '🔵 Default',\n          success: '✅ Success',\n          error: '❌ Error',\n          warning: '⚠️ Warning'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxVariant' },\n        defaultValue: { summary: 'default' }\n      }\n    },\n    size: {\n      description: 'Size of the checkbox',\n      options: ['sm', 'md', 'lg'],\n      control: { \n        type: 'radio',\n        labels: {\n          sm: '📦 Small',\n          md: '📋 Medium',\n          lg: '📊 Large'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxSize' },\n        defaultValue: { summary: 'md' }\n      }\n    },\n    disabled: {\n      description: 'Whether the checkbox is disabled',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    readonly: {\n      description: 'Whether the checkbox is readonly',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    required: {\n      description: 'Whether the checkbox is required',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    label: {\n      description: 'Label text for the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    helperText: {\n      description: 'Helper text displayed below the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    errorMessage: {\n      description: 'Error message displayed when variant is error',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    successMessage: {\n      description: 'Success message displayed when variant is success',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Playground checkbox',\n    helperText: 'Customize all properties using the controls below',\n    checked: false,\n    indeterminate: false,\n    variant: 'default',\n    size: 'md',\n    disabled: false,\n    readonly: false,\n    required: false,\n    errorMessage: '',\n    successMessage: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Interactive playground to test all checkbox properties and configurations. Use the controls panel to experiment with different combinations.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ResponsiveLayout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"w-full max-w-4xl mx-auto\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Basic Options</h4>\n            <bb-checkbox label=\"Enable notifications\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Auto-save changes\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Show preview\" [checked]=\"true\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Privacy Settings</h4>\n            <bb-checkbox label=\"Make profile public\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Allow contact from others\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Show online status\" [checked]=\"false\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Advanced Features</h4>\n            <bb-checkbox label=\"Enable beta features\" variant=\"warning\" [checked]=\"false\" helperText=\"May be unstable\"></bb-checkbox>\n            <bb-checkbox label=\"Developer mode\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Debug logging\" [checked]=\"false\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'responsive'\n    },\n    docs: {\n      description: {\n        story: `\n### Responsive Layout\n\nThis story demonstrates how checkboxes adapt to different screen sizes using responsive grid layouts.\nThe layout automatically adjusts from single column on mobile to three columns on larger screens.\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithInteractions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    props: {\n      items: [\n        { id: 1, label: 'Item 1', checked: false },\n        { id: 2, label: 'Item 2', checked: true },\n        { id: 3, label: 'Item 3', checked: false }\n      ],\n      selectAll: false,\n      onItemChange(index: number) {\n        this['items'][index].checked = !this['items'][index].checked;\n        this['updateSelectAll']();\n      },\n      onSelectAllChange() {\n        this['selectAll'] = !this['selectAll'];\n        this['items'].forEach((item: any) => item.checked = this['selectAll']);\n      },\n      updateSelectAll() {\n        const checkedCount = this['items'].filter((item: any) => item.checked).length;\n        this['selectAll'] = checkedCount === this['items'].length;\n      }\n    },\n    template: `\n      <div class=\"space-y-4\">\n        <bb-checkbox \n          label=\"Select All\" \n          [checked]=\"selectAll\"\n          [indeterminate]=\"items.filter(item => item.checked).length > 0 && items.filter(item => item.checked).length < items.length\"\n          (click)=\"onSelectAllChange()\"\n          class=\"font-medium\">\n        </bb-checkbox>\n        \n        <div class=\"pl-6 space-y-2\">\n          @for (item of items; track item.id) {\n            <bb-checkbox \n              [label]=\"item.label\"\n              [checked]=\"item.checked\"\n              (click)=\"onItemChange($index)\">\n            </bb-checkbox>\n          }\n        </div>\n        \n        <div class=\"text-sm text-gray-600 mt-4\">\n          Selected: {{ items.filter(item => item.checked).length }} of {{ items.length }}\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Interactive Multi-Selection\n\nThis story demonstrates a complex interaction pattern with a \"Select All\" checkbox that:\n- Shows checked state when all items are selected\n- Shows indeterminate state when some items are selected\n- Shows unchecked state when no items are selected\n- Updates child checkboxes when toggled\n\nPerfect for implementing bulk actions or grouped selections.\n        `\n      }\n    }\n  }\n}"
        }
      ],
      "src/logo/logo.component.stories.ts": [
        {
          "name": "AccessibilityStates",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" ariaLabel=\"Logo ByteBank Pro\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\" [isDecorative]=\"true\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "AllSizes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"lg\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "CustomStyling",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" className=\"opacity-75\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\" className=\"drop-shadow-lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\" className=\"w-24 md:w-32 lg:w-40\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    isDecorative: false\n  }\n}"
        },
        {
          "name": "InContext",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<LogoComponent>",
          "defaultValue": "{\n  title: 'Components/Logo',\n  component: LogoComponent,\n  parameters: {\n    layout: 'centered',\n    badges: ['stable', 'accessible']\n  },\n  argTypes: {\n    variant: {\n      options: ['full', 'icon'],\n      control: { type: 'radio' }\n    },\n    size: {\n      options: ['sm', 'md', 'lg'],\n      control: { type: 'radio' }\n    },\n    className: {\n      control: { type: 'text' }\n    },\n    ariaLabel: {\n      control: { type: 'text' }\n    },\n    isDecorative: {\n      control: { type: 'boolean' }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    ariaLabel: undefined,\n    isDecorative: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-logo ${argsToTemplate(args)}></bb-logo>`\n  })\n}"
        },
        {
          "name": "ResponsiveLayout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <div class=\"md:hidden\">\n          <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        </div>\n        <div class=\"hidden md:block\">\n          <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        </div>\n      </div>\n    `\n  })\n}"
        }
      ],
      "src/button/button.component.stories.ts": [
        {
          "name": "AllSizes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button size=\"sm\" variant=\"blue\">Small</bb-button>\n        <bb-button size=\"md\" variant=\"blue\">Medium</bb-button>\n        <bb-button size=\"lg\" variant=\"blue\">Large</bb-button>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button variant=\"dark\">Dark</bb-button>\n        <bb-button variant=\"blue\">Blue</bb-button>\n        <bb-button variant=\"green\">Green</bb-button>\n        <bb-button variant=\"orange\">Orange</bb-button>\n        <bb-button variant=\"outlineGreen\">Outline Green</bb-button>\n        <bb-button variant=\"outlineOrange\">Outline Orange</bb-button>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Disabled Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Loading",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: true,\n    disabled: false,\n    loadingText: 'Carregando, aguarde...'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Loading Button</bb-button>`\n  })\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonComponent>",
          "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Um componente de botão flexível com múltiplas variantes, tamanhos e estados, seguindo as diretrizes de acessibilidade.'\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'dark',\n        'blue',\n        'green',\n        'orange',\n        'outlineGreen',\n        'outlineOrange'\n      ] as ButtonVariant[],\n      description: 'Variante visual do botão'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'] as ButtonSize[],\n      description: 'Tamanho do botão'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'Tipo HTML do botão'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Estado de carregamento do botão'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Se o botão está desabilitado'\n    },\n    className: {\n      control: 'text',\n      description: 'Classes CSS adicionais'\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Label acessível do botão'\n    },\n    ariaDescribedBy: {\n      control: 'text',\n      description: 'ID do elemento que descreve o botão'\n    },\n    ariaPressed: {\n      control: 'boolean',\n      description: 'Estado pressionado para botões toggle'\n    },\n    role: {\n      control: 'text',\n      description: 'Role ARIA customizado'\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Texto para leitores de tela durante carregamento'\n    },\n    buttonClick: {\n      action: 'clicked',\n      description: 'Evento emitido quando o botão é clicado'\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "OutlineGreen",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'outlineGreen',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Green</bb-button>`\n  })\n}"
        },
        {
          "name": "OutlineOrange",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'outlineOrange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Orange</bb-button>`\n  })\n}"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Primary Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'dark',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Secondary Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'green',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Success Button</bb-button>`\n  })\n}"
        },
        {
          "name": "ToggleButton",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaPressed: false,\n    ariaLabel: 'Toggle notifications'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>🔔 Notifications</bb-button>`\n  })\n}"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'orange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Warning Button</bb-button>`\n  })\n}"
        },
        {
          "name": "WithAccessibility",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaLabel: 'Save document',\n    ariaDescribedBy: 'save-help-text'\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div>\n        <bb-button ${argsToTemplate(args)}>Save</bb-button>\n        <p id=\"save-help-text\" style=\"margin-top: 0.5rem; font-size: 0.875rem; color: #6b7280;\">\n          This will save your current document to the cloud\n        </p>\n      </div>\n    `\n  })\n}"
        }
      ],
      "src/toast/toast.component.stories.ts": [
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-4 items-end p-8 w-full h-screen relative\">\n        <bb-toast message=\"Mensagem de Sucesso!\" variant=\"success\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Erro!\" variant=\"error\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Informação!\" variant=\"info\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n      </div>\n    `\n  }),\n  parameters: {\n    // Override default layout for this specific story to display all toasts\n    layout: 'padded'\n  }\n}"
        },
        {
          "name": "AutoClosing",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Este toast fechará em 3 segundos.',\n    variant: 'success',\n    duration: 3000\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    message: 'Esta é uma notificação padrão.',\n    variant: 'info',\n    show: true,\n    duration: 0\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-toast ${argsToTemplate(args)}></bb-toast>`\n  })\n}"
        },
        {
          "name": "Error",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Ocorreu um erro ao processar a solicitação.',\n    variant: 'error'\n  }\n}"
        },
        {
          "name": "Info",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Informação importante para o usuário.',\n    variant: 'info'\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ToastComponent>",
          "defaultValue": "{\n  title: 'Components/Toast', //\n  component: ToastComponent, //\n  parameters: {\n    layout: 'fullscreen', // Toast is positioned, so fullscreen might be better for context\n    docs: {\n      description: {\n        component:\n          'Um componente de notificação que exibe mensagens temporárias ao usuário, com suporte a diferentes tipos de variantes (sucesso, erro, informação) e fechamento automático ou manual.' //\n      }\n    }\n  },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `\n      <div style=\"position: relative; height: 150px;\">\n      ${story}\n      </div>`\n    )\n  ],\n  argTypes: {\n    message: {\n      control: 'text',\n      description: 'A mensagem a ser exibida no toast.',\n      defaultValue: 'Esta é uma mensagem de notificação.'\n    },\n    variant: {\n      control: 'select',\n      options: ['success', 'error', 'info'],\n      description: 'Define a variação visual do toast.',\n      defaultValue: 'info'\n    },\n    show: {\n      control: 'boolean',\n      description: 'Controla a visibilidade do toast.',\n      defaultValue: true\n    },\n    duration: {\n      control: 'number',\n      description:\n        'Duração em milissegundos para o toast fechar automaticamente. 0 para não fechar.',\n      defaultValue: 0\n    },\n    toastClose: {\n      action: 'toastClosed',\n      description: 'Evento emitido quando o toast é fechado.'\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    message: 'Mensagem customizável do Toast.',\n    variant: 'info',\n    show: true,\n    duration: 5000\n  }\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Operação realizada com sucesso!',\n    variant: 'success',\n    duration: 0\n  }\n}"
        }
      ],
      "src/input/input.component.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    placeholder: 'Digite seu nome'\n  }\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Campo desabilitado',\n    placeholder: 'Este campo está desabilitado',\n    disabled: true,\n    value: 'Valor desabilitado'\n  }\n}"
        },
        {
          "name": "Email",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'email',\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    prefixIcon: Mail\n  }\n}"
        },
        {
          "name": "Error",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'error',\n    label: 'Campo com erro',\n    value: 'dados-incorretos',\n    errorMessage: 'Por favor, verifique os dados informados.'\n  }\n}"
        },
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'lg',\n    label: 'Tamanho grande',\n    placeholder: 'Input grande'\n  }\n}"
        },
        {
          "name": "LoginForm",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4 w-80\">\n        <bb-input\n          label=\"Email\"\n          type=\"email\"\n          placeholder=\"seu@email.com\"\n          prefixIcon=\"mail\"\n          required=\"true\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Senha\"\n          type=\"password\"\n          placeholder=\"Digite sua senha\"\n          showPasswordToggle=\"true\"\n          required=\"true\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Medium",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'md',\n    label: 'Tamanho médio',\n    placeholder: 'Input médio (padrão)'\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<InputComponent>",
          "defaultValue": "{\n  title: 'Components/Input',\n  component: InputComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A versatile input component with support for different variants, sizes, icons, and accessibility features.'\n      }\n    }\n  },\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['text', 'password', 'email', 'number', 'tel', 'url', 'search'],\n      description: 'The input type'\n    },\n    variant: {\n      control: 'select',\n      options: ['default', 'success', 'error', 'warning'],\n      description: 'Visual variant of the input'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      description: 'Size of the input'\n    },\n    placeholder: {\n      control: 'text',\n      description: 'Placeholder text'\n    },\n    value: {\n      control: 'text',\n      description: 'Input value'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the input is disabled'\n    },\n    readonly: {\n      control: 'boolean',\n      description: 'Whether the input is readonly'\n    },\n    required: {\n      control: 'boolean',\n      description: 'Whether the input is required'\n    },\n    label: {\n      control: 'text',\n      description: 'Label text'\n    },\n    helperText: {\n      control: 'text',\n      description: 'Helper text below the input'\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Error message (shown when variant is error)'\n    },\n    successMessage: {\n      control: 'text',\n      description: 'Success message (shown when variant is success)'\n    },\n    showPasswordToggle: {\n      control: 'boolean',\n      description: 'Show password toggle button (for password inputs)'\n    },\n    prefixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the start'\n    },\n    suffixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the end'\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes'\n    }\n  },\n  args: {\n    type: 'text',\n    variant: 'default',\n    size: 'md',\n    placeholder: 'Digite algo...',\n    value: '',\n    disabled: false,\n    readonly: false,\n    required: false,\n    showPasswordToggle: false\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Number",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'number',\n    label: 'Idade',\n    placeholder: '25'\n  }\n}"
        },
        {
          "name": "Password",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'password',\n    label: 'Senha',\n    placeholder: 'Digite sua senha',\n    showPasswordToggle: true,\n    helperText: 'A senha deve ter pelo menos 8 caracteres'\n  }\n}"
        },
        {
          "name": "Readonly",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Campo somente leitura',\n    readonly: true,\n    value: 'Este valor não pode ser editado'\n  }\n}"
        },
        {
          "name": "Required",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Campo obrigatório',\n    placeholder: 'Este campo é obrigatório',\n    required: true,\n    helperText: 'Este campo deve ser preenchido'\n  }\n}"
        },
        {
          "name": "Search",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'search',\n    placeholder: 'Buscar...',\n    prefixIcon: SearchIcon\n  }\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'sm',\n    label: 'Tamanho pequeno',\n    placeholder: 'Input pequeno'\n  }\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'success',\n    label: 'Campo válido',\n    value: 'Dados corretos',\n    successMessage: 'Perfeito! Os dados estão corretos.'\n  }\n}"
        },
        {
          "name": "ValidationStates",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6 w-80\">\n        <bb-input\n          label=\"Campo válido\"\n          variant=\"success\"\n          value=\"dados@corretos.com\"\n          successMessage=\"Email válido!\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com erro\"\n          variant=\"error\"\n          value=\"email-inválido\"\n          errorMessage=\"Por favor, insira um email válido.\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com aviso\"\n          variant=\"warning\"\n          value=\"exemplo@teste.com\"\n          helperText=\"Certifique-se de que este email está correto.\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'warning',\n    label: 'Campo com aviso',\n    value: 'dados-atenção',\n    helperText: 'Atenção: verifique se os dados estão corretos.'\n  }\n}"
        },
        {
          "name": "WithHelperText",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    helperText: 'Utilizaremos este email para entrar em contato'\n  }\n}"
        },
        {
          "name": "WithLabel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Nome completo',\n    placeholder: 'Digite seu nome completo'\n  }\n}"
        },
        {
          "name": "WithPrefixIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Usuário',\n    placeholder: 'Digite seu usuário',\n    prefixIcon: UserRoundIcon\n  }\n}"
        },
        {
          "name": "WithSuffixIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Website',\n    placeholder: 'https://exemplo.com',\n    suffixIcon: Link\n  }\n}"
        }
      ],
      ".storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": ".storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  }\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "src/button/button.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ButtonComponent>",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/checkbox/checkbox.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<CheckboxComponent>",
          "file": "src/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/input/input.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<InputComponent>",
          "file": "src/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/logo/logo.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<LogoComponent>",
          "file": "src/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/toast/toast.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ToastComponent>",
          "file": "src/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": ".storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllSizes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Loading",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OutlineGreen",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OutlineOrange",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ToggleButton",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithAccessibility",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AccessibilityDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisabledState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ErrorState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FormIntegration",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoadingState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ResponsiveLayout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithInteractions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/checkbox/checkbox.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Email",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Error",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoginForm",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Medium",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Number",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Password",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Readonly",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Required",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Search",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ValidationStates",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithHelperText",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithLabel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithPrefixIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithSuffixIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/input/input.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AccessibilityStates",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllSizes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomStyling",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "InContext",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ResponsiveLayout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/logo/logo.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AutoClosing",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Error",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Info",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/toast/toast.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
