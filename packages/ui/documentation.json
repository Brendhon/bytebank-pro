{
  "pipes": [],
  "interfaces": [],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button variant=\"dark\">Dark</bb-button>\n        <bb-button variant=\"blue\">Blue</bb-button>\n        <bb-button variant=\"green\">Green</bb-button>\n        <bb-button variant=\"orange\">Orange</bb-button>\n        <bb-button variant=\"outlineGreen\">Outline Green</bb-button>\n        <bb-button variant=\"outlineOrange\">Outline Orange</bb-button>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Disabled Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Loading",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: true,\n    disabled: false,\n    loadingAriaLabel: 'Carregando, aguarde...'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Loading Button</bb-button>`\n  })\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonComponent>",
        "defaultValue": "{\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Um componente de botão flexível com múltiplas variantes e estados.'\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['dark', 'blue', 'green', 'orange', 'outlineGreen', 'outlineOrange'] as ButtonVariant[],\n      description: 'Variante visual do botão'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'Tipo HTML do botão'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Estado de carregamento do botão'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Se o botão está desabilitado'\n    },\n    className: {\n      control: 'text',\n      description: 'Classes CSS adicionais'\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Label acessível do botão'\n    },\n    loadingAriaLabel: {\n      control: 'text',\n      description: 'Label acessível durante carregamento'\n    },\n    buttonClick: {\n      action: 'clicked',\n      description: 'Evento emitido quando o botão é clicado'\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "OutlineGreen",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'outlineGreen',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Green</bb-button>`\n  })\n}"
      },
      {
        "name": "OutlineOrange",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'outlineOrange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Orange</bb-button>`\n  })\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": ".storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Primary Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'dark',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Secondary Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'green',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Success Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'orange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Warning Button</bb-button>`\n  })\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ButtonComponent>",
        "file": "src/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/button/button.component.stories.ts": [
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button variant=\"dark\">Dark</bb-button>\n        <bb-button variant=\"blue\">Blue</bb-button>\n        <bb-button variant=\"green\">Green</bb-button>\n        <bb-button variant=\"orange\">Orange</bb-button>\n        <bb-button variant=\"outlineGreen\">Outline Green</bb-button>\n        <bb-button variant=\"outlineOrange\">Outline Orange</bb-button>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Disabled Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Loading",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: true,\n    disabled: false,\n    loadingAriaLabel: 'Carregando, aguarde...'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Loading Button</bb-button>`\n  })\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonComponent>",
          "defaultValue": "{\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Um componente de botão flexível com múltiplas variantes e estados.'\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['dark', 'blue', 'green', 'orange', 'outlineGreen', 'outlineOrange'] as ButtonVariant[],\n      description: 'Variante visual do botão'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'Tipo HTML do botão'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Estado de carregamento do botão'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Se o botão está desabilitado'\n    },\n    className: {\n      control: 'text',\n      description: 'Classes CSS adicionais'\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Label acessível do botão'\n    },\n    loadingAriaLabel: {\n      control: 'text',\n      description: 'Label acessível durante carregamento'\n    },\n    buttonClick: {\n      action: 'clicked',\n      description: 'Evento emitido quando o botão é clicado'\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "OutlineGreen",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'outlineGreen',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Green</bb-button>`\n  })\n}"
        },
        {
          "name": "OutlineOrange",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'outlineOrange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Orange</bb-button>`\n  })\n}"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Primary Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'dark',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Secondary Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'green',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Success Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'orange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Warning Button</bb-button>`\n  })\n}"
        }
      ],
      ".storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": ".storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "src/button/button.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ButtonComponent>",
          "file": "src/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": ".storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Loading",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OutlineGreen",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OutlineOrange",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/button/button.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
