{
  "pipes": [],
  "interfaces": [
    {
      "name": "SampleData",
      "id": "interface-SampleData-2e5bb45c0d0d946f32b4b550635eca334def789fb67d11f1489a91d84e9f1e321f6966f7518ae2a8c3699a616fcc4c9d158b196fbf5145abf794b04c7a40bfe1",
      "file": "src/table/generic-table/generic-table.component.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { argsToTemplate } from '@storybook/angular';\nimport { GenericTableComponent, TableColumn } from './generic-table.component';\n\ninterface SampleData {\n  id: number;\n  name: string;\n  email: string;\n  status: 'active' | 'inactive';\n  amount: number;\n}\n\nconst sampleData: SampleData[] = [\n  { id: 1, name: 'John Doe', email: 'john@example.com', status: 'active', amount: 1500 },\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com', status: 'inactive', amount: 2300 },\n  { id: 3, name: 'Bob Johnson', email: 'bob@example.com', status: 'active', amount: 1200 },\n  { id: 4, name: 'Alice Brown', email: 'alice@example.com', status: 'active', amount: 3400 },\n  { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', status: 'inactive', amount: 890 },\n  { id: 6, name: 'David Miller', email: 'david@example.com', status: 'active', amount: 2100 },\n  { id: 7, name: 'Eva Garcia', email: 'eva@example.com', status: 'inactive', amount: 1750 },\n  { id: 8, name: 'Frank Davis', email: 'frank@example.com', status: 'active', amount: 2800 },\n  { id: 9, name: 'Grace Lee', email: 'grace@example.com', status: 'active', amount: 3200 },\n  { id: 10, name: 'Henry Taylor', email: 'henry@example.com', status: 'inactive', amount: 1950 },\n  { id: 11, name: 'Isabel Martinez', email: 'isabel@example.com', status: 'active', amount: 2650 },\n  { id: 12, name: 'Jack Anderson', email: 'jack@example.com', status: 'active', amount: 1400 }\n];\n\nconst sampleColumns: TableColumn<SampleData>[] = [\n  { label: 'ID', accessor: 'id' },\n  { label: 'Name', accessor: 'name' },\n  { label: 'Email', accessor: 'email' },\n  { label: 'Status', accessor: 'status' },\n  { label: 'Amount', accessor: 'amount' }\n];\n\nconst meta: Meta<GenericTableComponent<SampleData>> = {\n  title: 'Components/Table/GenericTable',\n  component: GenericTableComponent,\n  parameters: {\n    layout: 'padded',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO GenericTable é um componente de tabela reutilizável que permite exibir dados tabulares de forma organizada e flexível. Suporta colunas customizáveis, paginação opcional e estados de carregamento.\n\n## Quando Usar\n\n- Para exibir listas de dados estruturados\n- Quando precisar de paginação para grandes volumes de dados\n- Para criar interfaces de administração e dashboards\n- Em relatórios e visualizações de dados\n\n## Acessibilidade\n\n- Suporta navegação por teclado\n- Implementa semântica apropriada com elementos table\n- Compatível com leitores de tela\n- Mantém foco visível durante navegação\n        `\n      }\n    }\n  },\n  argTypes: {\n    data: {\n      description: 'Array of data objects to display in the table',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'T[]' },\n        defaultValue: { summary: '[]' }\n      }\n    },\n    columns: {\n      description: 'Array of column definitions with label and accessor properties',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'TableColumn<T>[]' }\n      }\n    },\n    pageSize: {\n      description: 'Number of items per page (undefined disables pagination)',\n      control: { type: 'number' },\n      table: {\n        type: { summary: 'number | undefined' },\n        defaultValue: { summary: 'undefined' }\n      }\n    }\n  },\n  tags: ['autodocs']\n};\n\nexport default meta;\ntype Story = StoryObj<GenericTableComponent<SampleData>>;\n\nexport const Default: Story = {\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  })\n};\n\nexport const AllVariants: Story = {\n  render: () => ({\n    template: `\n      <div class=\"space-y-8\">\n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Com Paginação (5 itens por página)</h3>\n          <bb-generic-table \n            [data]=\"data\" \n            [columns]=\"columns\" \n            [pageSize]=\"5\">\n          </bb-generic-table>\n        </div>\n        \n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Sem Paginação</h3>\n          <bb-generic-table \n            [data]=\"smallData\" \n            [columns]=\"columns\">\n          </bb-generic-table>\n        </div>\n        \n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Estado Vazio</h3>\n          <bb-generic-table \n            [data]=\"[]\" \n            [columns]=\"columns\" \n            [pageSize]=\"10\">\n          </bb-generic-table>\n        </div>\n      </div>\n    `,\n    props: {\n      data: sampleData,\n      smallData: sampleData.slice(0, 3),\n      columns: sampleColumns\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra todas as variações visuais do componente GenericTable lado a lado.'\n      }\n    }\n  }\n};\n\nexport const Playground: Story = {\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 5\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Use os controles abaixo para experimentar diferentes configurações do componente.'\n      }\n    }\n  }\n};\n\nexport const WithPagination: Story = {\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 3\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela com Paginação\n\nEsta story demonstra o uso da tabela com paginação habilitada, útil para grandes volumes de dados.\n\n\\`\\`\\`html\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"columns\" \n  [pageSize]=\"3\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n};\n\nexport const WithoutPagination: Story = {\n  args: {\n    data: sampleData.slice(0, 5),\n    columns: sampleColumns,\n    pageSize: undefined\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela sem Paginação\n\nQuando \\`pageSize\\` é undefined, a paginação é desabilitada e todos os dados são exibidos de uma vez.\n\n\\`\\`\\`html\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"columns\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n};\n\nexport const EmptyState: Story = {\n  args: {\n    data: [],\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra como a tabela se comporta quando não há dados para exibir.'\n      }\n    }\n  }\n};\n\nexport const LargeDataset: Story = {\n  args: {\n    data: Array.from({ length: 100 }, (_, i) => ({\n      id: i + 1,\n      name: `User ${i + 1}`,\n      email: `user${i + 1}@example.com`,\n      status: i % 3 === 0 ? 'inactive' : ('active' as 'active' | 'inactive'),\n      amount: Math.floor(Math.random() * 5000) + 500\n    })),\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstra o comportamento da tabela com um grande volume de dados (100 registros) e paginação.'\n      }\n    }\n  }\n};\n\nexport const ResponsiveLayout: Story = {\n  args: {\n    data: sampleData.slice(0, 5),\n    columns: sampleColumns,\n    pageSize: undefined\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"w-full\">\n        <bb-generic-table ${argsToTemplate(args)}></bb-generic-table>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1'\n    },\n    docs: {\n      description: {\n        story:\n          'Visualiza como a tabela se adapta em diferentes tamanhos de tela. Use o controle de viewport para testar.'\n      }\n    }\n  }\n};\n\nexport const WithCustomRender: Story = {\n  render: () => ({\n    template: `\n      <div>\n        <ng-template #statusTemplate let-value let-row=\"row\">\n          <span class=\"px-2 py-1 rounded-full text-xs\" \n                [ngClass]=\"{\n                  'bg-green-100 text-green-800': value === 'active',\n                  'bg-red-100 text-red-800': value === 'inactive'\n                }\">\n            {{ value === 'active' ? '✓ Ativo' : '✗ Inativo' }}\n          </span>\n        </ng-template>\n\n        <bb-generic-table \n          [data]=\"customData\" \n          [columns]=\"getCustomColumns(statusTemplate)\">\n        </bb-generic-table>\n      </div>\n    `,\n    props: {\n      customData: [\n        { id: 1, name: 'John Doe', email: 'john@example.com', status: 'active' },\n        { id: 2, name: 'Jane Smith', email: 'jane@example.com', status: 'inactive' },\n        { id: 3, name: 'Bob Johnson', email: 'bob@example.com', status: 'active' },\n        { id: 4, name: 'Alice Brown', email: 'alice@example.com', status: 'active' },\n        { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', status: 'inactive' }\n      ],\n      getCustomColumns: (statusTemplate: any) => [\n        { label: 'ID', accessor: 'id' },\n        { label: 'Name', accessor: 'name' },\n        { label: 'Email', accessor: 'email' },\n        { label: 'Status', accessor: 'status', render: statusTemplate }\n      ]\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela com Renderização Customizada\n\nEsta story demonstra como usar a propriedade \\`render\\` das colunas com templates Angular para customizar a exibição dos dados:\n\n- **Status**: Exibe badges coloridos com ícones para status ativo/inativo\n\\`\\`\\`\n<!-- Uso na tabela -->\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"[{ label: 'Status', accessor: 'status', render: statusTemplate }]\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n};\n",
      "properties": [
        {
          "name": "amount",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "email",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "status",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "\"active\" | \"inactive\"",
          "indexKey": "",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "AccessibilityDemo",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6\">\n        <div class=\"bg-blue-50 p-4 rounded-lg\">\n          <h3 class=\"font-medium text-blue-900 mb-2\">Accessibility Features Demo</h3>\n          <p class=\"text-blue-700 text-sm mb-4\">\n            Try navigating with keyboard (Tab/Space) or screen reader to experience accessibility features.\n          </p>\n        </div>\n        \n        <fieldset class=\"space-y-4\">\n          <legend class=\"font-medium text-gray-900\">Subscription Preferences</legend>\n          \n          <bb-checkbox \n            label=\"Weekly newsletter\"\n            helperText=\"Receive our weekly digest every Monday\"\n            [checked]=\"true\"\n            [required]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Product updates\"\n            helperText=\"Get notified about new features and improvements\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing communications\"\n            helperText=\"Promotional offers and special deals\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Terms and Conditions\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </fieldset>\n        \n        <div class=\"text-sm text-gray-600 space-y-2\">\n          <p><strong>Keyboard Navigation:</strong></p>\n          <ul class=\"list-disc list-inside space-y-1 ml-4\">\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Tab</kbd> to navigate between checkboxes</li>\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Space</kbd> to toggle checkbox state</li>\n            <li>Screen readers will announce label, state, and helper text</li>\n          </ul>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          { id: 'color-contrast', enabled: true },\n          { id: 'keyboard-navigation', enabled: true },\n          { id: 'aria-valid-attr', enabled: true }\n        ]\n      }\n    },\n    docs: {\n      description: {\n        story: `\n### Accessibility Demonstration\n\nThis story showcases the checkbox component's accessibility features:\n\n- **Keyboard Navigation**: Full keyboard support with Tab and Space keys\n- **Screen Reader Support**: Proper ARIA attributes and semantic HTML\n- **Focus Management**: Clear visual focus indicators\n- **Color Contrast**: WCAG compliant color combinations\n- **Error Announcements**: Live regions for dynamic state changes\n- **Required Field Indicators**: Visual and programmatic indication\n\nAll checkboxes are properly labeled and associated with their help text and error messages.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "AccessibilityStates",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" ariaLabel=\"Logo ByteBank Pro\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\" [isDecorative]=\"true\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllFeatures",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Countries',\n    multiple: true,\n    searchable: true,\n    clearable: true,\n    required: true,\n    value: ['br', 'us'],\n    helperText:\n      'A fully-featured select with multiple selection, search, clear functionality, and validation'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### All Features Combined\n\nThis example shows the select component with all features enabled:\n- Multiple selection with tag display\n- Search functionality for filtering\n- Clear button to reset selection\n- Required field validation\n- Comprehensive helper text\n\nPerfect for complex form scenarios where users need maximum flexibility.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllPositions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"grid grid-cols-4 gap-4 p-4\">\n        <bb-popover position=\"top\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-blue text-white rounded text-sm\">Top</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Acima</div>\n        </bb-popover>\n        \n        <bb-popover position=\"bottom\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-green text-white rounded text-sm\">Bottom</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Abaixo</div>\n        </bb-popover>\n        \n        <bb-popover position=\"left\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-orange text-white rounded text-sm\">Left</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Esquerda</div>\n        </bb-popover>\n        \n        <bb-popover position=\"right\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-red text-white rounded text-sm\">Right</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Direita</div>\n        </bb-popover>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra todas as posições básicas disponíveis para o popover.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllSizes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-4 w-full max-w-md\">\n        <bb-select \n          [options]=\"options\" \n          size=\"sm\" \n          label=\"Small Size\" \n          placeholder=\"Small select\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          size=\"md\" \n          label=\"Medium Size\" \n          placeholder=\"Medium select\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          size=\"lg\" \n          label=\"Large Size\" \n          placeholder=\"Large select\"\n        ></bb-select>\n      </div>\n    `,\n    props: {\n      options: mockOptions\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows the select component in all available sizes (small, medium, large).'\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllSizes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button size=\"sm\" variant=\"blue\">Small</bb-button>\n        <bb-button size=\"md\" variant=\"blue\">Medium</bb-button>\n        <bb-button size=\"lg\" variant=\"blue\">Large</bb-button>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllSizes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"lg\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Visual Variants</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Default variant\" variant=\"default\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Success variant\" variant=\"success\" [checked]=\"true\" successMessage=\"Validated successfully\"></bb-checkbox>\n            <bb-checkbox label=\"Error variant\" variant=\"error\" [checked]=\"false\" [required]=\"true\" errorMessage=\"This field is required\"></bb-checkbox>\n            <bb-checkbox label=\"Warning variant\" variant=\"warning\" [checked]=\"true\" helperText=\"Proceed with caution\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Sizes</h3>\n          <div class=\"flex items-center gap-6\">\n            <bb-checkbox label=\"Small\" size=\"sm\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Medium\" size=\"md\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Large\" size=\"lg\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">States</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Unchecked\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Checked\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Indeterminate\" [indeterminate]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled Checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Readonly\" [readonly]=\"true\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'This story displays all available variants, sizes, and states of the checkbox component for easy comparison.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-6 w-full max-w-md\">\n        <bb-select \n          [options]=\"options\" \n          variant=\"default\" \n          label=\"Default Variant\" \n          placeholder=\"Select an option\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          variant=\"success\" \n          label=\"Success Variant\" \n          value=\"br\"\n          successMessage=\"Selection confirmed successfully\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          variant=\"error\" \n          label=\"Error Variant\" \n          required=\"true\"\n          errorMessage=\"This field is required\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          variant=\"warning\" \n          label=\"Warning Variant\" \n          value=\"us\"\n          helperText=\"Please verify your selection\"\n        ></bb-select>\n      </div>\n    `,\n    props: {\n      options: mockOptions\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays all available visual variants of the select component for easy comparison.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-8\">\n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Com Paginação (5 itens por página)</h3>\n          <bb-generic-table \n            [data]=\"data\" \n            [columns]=\"columns\" \n            [pageSize]=\"5\">\n          </bb-generic-table>\n        </div>\n        \n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Sem Paginação</h3>\n          <bb-generic-table \n            [data]=\"smallData\" \n            [columns]=\"columns\">\n          </bb-generic-table>\n        </div>\n        \n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Estado Vazio</h3>\n          <bb-generic-table \n            [data]=\"[]\" \n            [columns]=\"columns\" \n            [pageSize]=\"10\">\n          </bb-generic-table>\n        </div>\n      </div>\n    `,\n    props: {\n      data: sampleData,\n      smallData: sampleData.slice(0, 3),\n      columns: sampleColumns\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra todas as variações visuais do componente GenericTable lado a lado.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button variant=\"dark\">Dark</bb-button>\n        <bb-button variant=\"blue\">Blue</bb-button>\n        <bb-button variant=\"green\">Green</bb-button>\n        <bb-button variant=\"orange\">Orange</bb-button>\n        <bb-button variant=\"outlineGreen\">Outline Green</bb-button>\n        <bb-button variant=\"outlineOrange\">Outline Orange</bb-button>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-6\">\n        <div>\n          <h3 class=\"text-lg font-semibold mb-2\">All Sizes</h3>\n          <div class=\"flex gap-4 items-center flex-wrap\">\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra small\" size=\"xs\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Small\" size=\"sm\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Medium\" size=\"md\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Large\" size=\"lg\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra large\" size=\"xl\"></bb-img>\n          </div>\n        </div>\n        <div>\n          <h3 class=\"text-lg font-semibold mb-2\">With Custom Classes</h3>\n          <div class=\"flex gap-4 items-center flex-wrap\">\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Rounded\" size=\"md\" className=\"rounded-full\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Shadow\" size=\"md\" className=\"shadow-lg\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Border\" size=\"md\" className=\"border-4 border-blue-500\"></bb-img>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    layout: 'padded'\n  }\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "AllVariants",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-4 items-end p-8 w-full h-screen relative\">\n        <bb-toast message=\"Mensagem de Sucesso!\" variant=\"success\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Erro!\" variant=\"error\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Informação!\" variant=\"info\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n      </div>\n    `\n  }),\n  parameters: {\n    // Override default layout for this specific story to display all toasts\n    layout: 'padded'\n  }\n}"
      },
      {
        "name": "AutoClosing",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Este toast fechará em 3 segundos.',\n    variant: 'success',\n    duration: 3000\n  }\n}"
      },
      {
        "name": "CustomStyling",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" className=\"opacity-75\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\" className=\"drop-shadow-lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\" className=\"w-24 md:w-32 lg:w-40\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Decorative",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/200/200',\n    size: 'md',\n    isDecorative: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: \"Decorative images are hidden from screen readers and don't require alt text.\"\n      }\n    }\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Accept terms and conditions',\n    checked: false,\n    variant: 'default',\n    size: 'md'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    placeholder: 'Digite seu nome'\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    helperText: 'Choose your country from the list'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-select ${argsToTemplate(args)}></bb-select>`\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/paginator/paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    currentPage: 1,\n    totalPages: 10\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Default Dialog',\n    showCloseButton: true,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '32rem',\n    ariaLabel: ''\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          This is a generic dialog component that can contain any content.\n        </p>\n        <div class=\"flex gap-3 justify-end\">\n          <button class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n            Cancel\n          </button>\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Confirm\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/200/200',\n    alt: 'A beautiful placeholder image',\n    size: 'md'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-img ${argsToTemplate(args)}></bb-img>`\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    isDecorative: false\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    position: 'bottom-start',\n    disabled: false,\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    offset: 8\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 bg-bytebank-blue text-white rounded-lg hover:bg-bytebank-blue/90\">\n          Click me\n        </button>\n        <div slot=\"content\" class=\"p-4\">\n          <p class=\"text-sm text-gray-700\">Conteúdo do popover</p>\n        </div>\n      </bb-popover>\n    `\n  })\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    message: 'Esta é uma notificação padrão.',\n    variant: 'info',\n    show: true,\n    duration: 0\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-toast ${argsToTemplate(args)}></bb-toast>`\n  })\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Campo desabilitado',\n    placeholder: 'Este campo está desabilitado',\n    disabled: true,\n    value: 'Valor desabilitado'\n  }\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Disabled Button</bb-button>`\n  })\n}"
      },
      {
        "name": "DisabledState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <bb-checkbox label=\"Disabled unchecked\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled indeterminate\" [disabled]=\"true\" [indeterminate]=\"true\"></bb-checkbox>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows disabled checkboxes in different states. Disabled checkboxes cannot be interacted with.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "DisabledState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    disabled: true,\n    value: 'br',\n    helperText: 'This field is currently disabled and cannot be modified'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Disabled state prevents any interaction with the select component.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "DisabledState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    disabled: true,\n    position: 'bottom-start'\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 bg-gray-400 text-white rounded cursor-not-allowed\">\n          Desabilitado\n        </button>\n        <div slot=\"content\" class=\"p-4\">\n          <p class=\"text-sm text-gray-700\">Este conteúdo não deve aparecer.</p>\n        </div>\n      </bb-popover>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra o comportamento quando o popover está desabilitado.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Email",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'email',\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    prefixIcon: Mail\n  }\n}"
      },
      {
        "name": "EmptyState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Empty Select',\n    options: [],\n    noOptionsText: 'No options available at this time',\n    helperText: 'This select has no options to display'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows how the select behaves when no options are available. Displays a custom \"no options\" message.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "EmptyState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: [],\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra como a tabela se comporta quando não há dados para exibir.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Error",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'error',\n    label: 'Campo com erro',\n    value: 'dados-incorretos',\n    errorMessage: 'Por favor, verifique os dados informados.'\n  }\n}"
      },
      {
        "name": "Error",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Ocorreu um erro ao processar a solicitação.',\n    variant: 'error'\n  }\n}"
      },
      {
        "name": "ErrorState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Required agreement',\n    errorMessage: 'You must accept the terms to continue',\n    checked: false,\n    variant: 'error',\n    size: 'md',\n    required: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstrates error state with validation message. Used when user input is invalid or required field is empty.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "ErrorState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Required Field',\n    variant: 'error',\n    required: true,\n    errorMessage: 'Please select a country from the list'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Error state for form validation. Shows error styling and message.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "ErrorState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://invalid-url-that-will-fail.com/image.jpg',\n    alt: 'This image will fail to load',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'When an image fails to load, an error state with an icon is displayed.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "FewPages",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/paginator/paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    currentPage: 2,\n    totalPages: 5\n  }\n}"
      },
      {
        "name": "FormIntegration",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <form class=\"space-y-6 max-w-md\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Account Preferences</h3>\n          \n          <bb-checkbox \n            label=\"Email notifications\"\n            helperText=\"Receive updates about your account\"\n            [checked]=\"true\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"SMS notifications\"\n            helperText=\"Get important alerts via text message\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing emails\"\n            helperText=\"Receive promotional content and offers\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </div>\n        \n        <div class=\"border-t pt-4\">\n          <bb-checkbox \n            label=\"I agree to the Terms of Service\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"I agree to the Privacy Policy\"\n            [required]=\"true\"\n            [checked]=\"true\">\n          </bb-checkbox>\n        </div>\n        \n        <button \n          type=\"submit\" \n          class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n          disabled>\n          Save Preferences\n        </button>\n      </form>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Form Integration Example\n\nDemonstrates how checkboxes work within forms, showing:\n- Different variants for different types of choices\n- Required field validation\n- Helper text for guidance\n- Error states for invalid inputs\n- Grouped related options\n\nThis pattern is common in settings pages, registration forms, and preference panels.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "FullWidth",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/800/400',\n    alt: 'Full width image',\n    size: 'full'\n  },\n  parameters: {\n    layout: 'padded'\n  }\n}"
      },
      {
        "name": "InContext",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Info",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Informação importante para o usuário.',\n    variant: 'info'\n  }\n}"
      },
      {
        "name": "InFormContext",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <form class=\"space-y-4 w-full max-w-md\">\n        <bb-select \n          [options]=\"countries\" \n          label=\"Country\" \n          required=\"true\"\n          helperText=\"Select your country of residence\"\n        ></bb-select>\n        \n        <bb-select \n          [options]=\"states\" \n          label=\"State/Province\" \n          searchable=\"true\"\n          clearable=\"true\"\n          helperText=\"Search and select your state or province\"\n        ></bb-select>\n        \n        <bb-select \n          [options]=\"priorities\" \n          label=\"Priority Level\" \n          variant=\"warning\"\n          value=\"medium\"\n          helperText=\"Current priority level - change if needed\"\n        ></bb-select>\n      </form>\n    `,\n    props: {\n      countries: mockOptions,\n      states: [\n        { value: 'ca', label: 'California' },\n        { value: 'ny', label: 'New York' },\n        { value: 'tx', label: 'Texas' },\n        { value: 'fl', label: 'Florida' },\n        { value: 'sp', label: 'São Paulo' },\n        { value: 'rj', label: 'Rio de Janeiro' }\n      ],\n      priorities: [\n        { value: 'low', label: 'Low Priority' },\n        { value: 'medium', label: 'Medium Priority' },\n        { value: 'high', label: 'High Priority' },\n        { value: 'urgent', label: 'Urgent' }\n      ]\n    }\n  }),\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        story:\n          'Example of multiple select components working together in a form context with different configurations.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'lg',\n    label: 'Tamanho grande',\n    placeholder: 'Input grande'\n  }\n}"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/400/400',\n    alt: 'Large image',\n    size: 'lg'\n  }\n}"
      },
      {
        "name": "LargeDataset",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: Array.from({ length: 100 }, (_, i) => ({\n      id: i + 1,\n      name: `User ${i + 1}`,\n      email: `user${i + 1}@example.com`,\n      status: i % 3 === 0 ? 'inactive' : ('active' as 'active' | 'inactive'),\n      amount: Math.floor(Math.random() * 5000) + 500\n    })),\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstra o comportamento da tabela com um grande volume de dados (100 registros) e paginação.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "LastPage",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/paginator/paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    currentPage: 10,\n    totalPages: 10\n  }\n}"
      },
      {
        "name": "Loading",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: true,\n    disabled: false,\n    loadingText: 'Carregando, aguarde...'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Loading Button</bb-button>`\n  })\n}"
      },
      {
        "name": "LoadingState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Processing selection...',\n    disabled: true,\n    helperText: 'Please wait while we validate your choice',\n    variant: 'default',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Represents a checkbox in a loading/processing state where user interaction is temporarily disabled.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "LoadingState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    loading: true,\n    helperText: 'Loading countries from server...'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows the loading state with a spinner indicator. Use this while fetching options from an API.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "LoadingState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://httpbin.org/delay/3',\n    alt: 'This image will take time to load',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'While loading, a spinner icon is displayed.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "LoginForm",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4 w-80\">\n        <bb-input\n          label=\"Email\"\n          type=\"email\"\n          placeholder=\"seu@email.com\"\n          prefixIcon=\"mail\"\n          required=\"true\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Senha\"\n          type=\"password\"\n          placeholder=\"Digite sua senha\"\n          showPasswordToggle=\"true\"\n          required=\"true\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "LoginForm",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Login to ByteBank',\n    showCloseButton: true,\n    closeOnBackdropClick: false,\n    closeOnEscape: true,\n    maxWidth: '28rem',\n    ariaLabel: 'Login form dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Login dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <form class=\"space-y-4\">\n          <div>\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input \n              id=\"email\"\n              type=\"email\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n          <div>\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input \n              id=\"password\"\n              type=\"password\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter your password\"\n            />\n          </div>\n          <div class=\"flex items-center justify-between pt-4\">\n            <a href=\"#\" class=\"text-sm text-blue-600 hover:text-blue-800\">\n              Forgot password?\n            </a>\n            <div class=\"flex gap-3\">\n              <button type=\"button\" class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n                Cancel\n              </button>\n              <button type=\"submit\" class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n                Login\n              </button>\n            </div>\n          </div>\n        </form>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Login Form Dialog\n\nEsta variante demonstra como usar o Dialog para formulários de autenticação. \nNote que o fechamento por clique no backdrop está desabilitado para evitar perda acidental de dados.\n\n**Características:**\n- Não permite fechamento por clique no backdrop\n- Permite fechamento via Escape\n- Tamanho otimizado para formulários de login\n- Inclui link para recuperação de senha\n\n\\`\\`\\`html\n<bb-dialog \n  [isOpen]=\"isLoginOpen\"\n  title=\"Login to ByteBank\"\n  [closeOnBackdropClick]=\"false\"\n  maxWidth=\"28rem\"\n  (close)=\"handleLoginClose()\"\n>\n  <!-- Form content -->\n</bb-dialog>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "Medium",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'md',\n    label: 'Tamanho médio',\n    placeholder: 'Input médio (padrão)'\n  }\n}"
      },
      {
        "name": "MenuExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    position: 'bottom-start',\n    closeOnClickOutside: true,\n    closeOnEscape: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\">\n          Menu\n        </button>\n        <div slot=\"content\" class=\"py-2 min-w-[120px]\">\n          <button class=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n            Editar\n          </button>\n          <button class=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n            Compartilhar\n          </button>\n          <hr class=\"my-1\">\n          <button class=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\">\n            Excluir\n          </button>\n        </div>\n      </bb-popover>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Exemplo de uso como menu de ações contextuais.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<CheckboxComponent>",
        "defaultValue": "{\n  title: 'Components/Form/Checkbox',\n  component: CheckboxComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Description\n\nThe Checkbox component provides a selectable input for binary choices or multiple selections in forms and interfaces.\n\n## When to Use\n\n- For binary choices (agree/disagree, yes/no)\n- For multiple selections from a list of options\n- To confirm actions or acknowledge terms\n- In forms requiring user consent or preference selection\n\n## Features\n\n- Support for checked, unchecked, and indeterminate states\n- Multiple visual variants (default, success, error, warning)\n- Different sizes (sm, md, lg)\n- Accessibility compliant with ARIA attributes\n- Form integration with validation states\n- Helper text and error message support\n\n## Accessibility\n\n- Supports keyboard navigation (Space to toggle)\n- Implements proper ARIA attributes and roles\n- Screen reader friendly with descriptive labels\n- Visual focus indicators for keyboard users\n- Color contrast compliant in all states\n- Live regions for dynamic state announcements\n        `\n      }\n    }\n  },\n  argTypes: {\n    checked: {\n      description: 'Whether the checkbox is checked',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    indeterminate: {\n      description: 'Whether the checkbox is in indeterminate state (partially checked)',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    variant: {\n      description: 'Visual variant of the checkbox',\n      options: ['default', 'success', 'error', 'warning'],\n      control: {\n        type: 'select',\n        labels: {\n          default: '🔵 Default',\n          success: '✅ Success',\n          error: '❌ Error',\n          warning: '⚠️ Warning'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxVariant' },\n        defaultValue: { summary: 'default' }\n      }\n    },\n    size: {\n      description: 'Size of the checkbox',\n      options: ['sm', 'md', 'lg'],\n      control: {\n        type: 'radio',\n        labels: {\n          sm: '📦 Small',\n          md: '📋 Medium',\n          lg: '📊 Large'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxSize' },\n        defaultValue: { summary: 'md' }\n      }\n    },\n    disabled: {\n      description: 'Whether the checkbox is disabled',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    readonly: {\n      description: 'Whether the checkbox is readonly',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    required: {\n      description: 'Whether the checkbox is required',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    label: {\n      description: 'Label text for the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    helperText: {\n      description: 'Helper text displayed below the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    errorMessage: {\n      description: 'Error message displayed when variant is error',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    successMessage: {\n      description: 'Success message displayed when variant is success',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<InputComponent>",
        "defaultValue": "{\n  title: 'Components/Form/Input',\n  component: InputComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A versatile input component with support for different variants, sizes, icons, and accessibility features.'\n      }\n    }\n  },\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['text', 'password', 'email', 'number', 'tel', 'url', 'search'],\n      description: 'The input type'\n    },\n    variant: {\n      control: 'select',\n      options: ['default', 'success', 'error', 'warning'],\n      description: 'Visual variant of the input'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      description: 'Size of the input'\n    },\n    placeholder: {\n      control: 'text',\n      description: 'Placeholder text'\n    },\n    value: {\n      control: 'text',\n      description: 'Input value'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the input is disabled'\n    },\n    readonly: {\n      control: 'boolean',\n      description: 'Whether the input is readonly'\n    },\n    required: {\n      control: 'boolean',\n      description: 'Whether the input is required'\n    },\n    label: {\n      control: 'text',\n      description: 'Label text'\n    },\n    helperText: {\n      control: 'text',\n      description: 'Helper text below the input'\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Error message (shown when variant is error)'\n    },\n    successMessage: {\n      control: 'text',\n      description: 'Success message (shown when variant is success)'\n    },\n    showPasswordToggle: {\n      control: 'boolean',\n      description: 'Show password toggle button (for password inputs)'\n    },\n    prefixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the start'\n    },\n    suffixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the end'\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes'\n    }\n  },\n  args: {\n    type: 'text',\n    variant: 'default',\n    size: 'md',\n    placeholder: 'Digite algo...',\n    value: '',\n    disabled: false,\n    readonly: false,\n    required: false,\n    showPasswordToggle: false\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<SelectComponent>",
        "defaultValue": "{\n  title: 'Components/Form/Select',\n  component: SelectComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Description\n\nThe Select component provides a dropdown interface for selecting one or multiple options from a list. It supports advanced features like search, clear functionality, and various visual states.\n\n## When to Use\n\n- For choosing options from a predefined list\n- When you need to save space compared to radio buttons\n- For filtering or categorizing data\n- When users need to select multiple items from a list\n\n## Features\n\n- Single and multiple selection modes\n- Searchable options with filtering\n- Keyboard navigation support\n- Loading and disabled states\n- Clear functionality\n- Custom placeholder and helper text\n- Accessibility compliant with ARIA attributes\n\n## Accessibility\n\n- Full keyboard navigation support (Arrow keys, Enter, Escape)\n- Screen reader compatible with proper ARIA attributes\n- Focus management and visual indicators\n- Semantic HTML structure with proper roles\n        `\n      }\n    },\n    a11y: {\n      config: {\n        rules: [{ id: 'color-contrast', enabled: true }]\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      description: 'Visual style variant of the select component',\n      options: ['default', 'success', 'error', 'warning'],\n      control: {\n        type: 'select',\n        labels: {\n          default: '🔵 Default',\n          success: '✅ Success',\n          error: '❌ Error',\n          warning: '⚠️ Warning'\n        }\n      },\n      table: {\n        defaultValue: { summary: 'default' },\n        type: { summary: 'SelectVariant' }\n      }\n    },\n    size: {\n      description: 'Size of the select component',\n      options: ['sm', 'md', 'lg'],\n      control: {\n        type: 'radio',\n        labels: {\n          sm: 'Small',\n          md: 'Medium',\n          lg: 'Large'\n        }\n      },\n      table: {\n        defaultValue: { summary: 'sm' },\n        type: { summary: 'SelectSize' }\n      }\n    },\n    options: {\n      description: 'Array of options to display in the dropdown',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'SelectOption[]' }\n      }\n    },\n    value: {\n      description: 'Currently selected value(s)',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'T | T[] | undefined' }\n      }\n    },\n    multiple: {\n      description: 'Enable multiple selection mode',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    searchable: {\n      description: 'Enable search functionality to filter options',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    clearable: {\n      description: 'Show clear button to reset selection',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    disabled: {\n      description: 'Disable the select component',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    readonly: {\n      description: 'Make the select read-only',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    required: {\n      description: 'Mark the field as required',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    loading: {\n      description: 'Show loading state',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    label: {\n      description: 'Label text for the select field',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    placeholder: {\n      description: 'Placeholder text when no option is selected',\n      control: { type: 'text' },\n      table: {\n        defaultValue: { summary: 'Select an option' },\n        type: { summary: 'string' }\n      }\n    },\n    helperText: {\n      description: 'Helper text displayed below the select',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    errorMessage: {\n      description: 'Error message displayed when variant is error',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    successMessage: {\n      description: 'Success message displayed when variant is success',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    // Hide event outputs from controls\n    valueChange: {\n      table: { disable: true }\n    },\n    selectFocus: {\n      table: { disable: true }\n    },\n    selectBlur: {\n      table: { disable: true }\n    },\n    selectKeydown: {\n      table: { disable: true }\n    },\n    searchChange: {\n      table: { disable: true }\n    },\n    optionSelect: {\n      table: { disable: true }\n    },\n    dropdownOpen: {\n      table: { disable: true }\n    },\n    dropdownClose: {\n      table: { disable: true }\n    }\n  },\n  args: {\n    options: mockOptions,\n    placeholder: 'Select a country',\n    variant: 'default',\n    size: 'sm',\n    multiple: false,\n    searchable: false,\n    clearable: false,\n    disabled: false,\n    readonly: false,\n    required: false,\n    loading: false\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/paginator/paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<PaginatorComponent>",
        "defaultValue": "{\n  title: 'Components/Table/Paginator',\n  component: PaginatorComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Paginator component for navigating through pages of content. Displays page numbers with ellipses for large page counts and navigation arrows.'\n      }\n    }\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    currentPage: {\n      control: { type: 'number', min: 1 },\n      description: 'The current active page number'\n    },\n    totalPages: {\n      control: { type: 'number', min: 1 },\n      description: 'The total number of available pages'\n    },\n    onPageChange: {\n      action: 'pageChanged',\n      description: 'Event emitted when the page changes'\n    }\n  }\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<GenericTableComponent<SampleData>>",
        "defaultValue": "{\n  title: 'Components/Table/GenericTable',\n  component: GenericTableComponent,\n  parameters: {\n    layout: 'padded',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO GenericTable é um componente de tabela reutilizável que permite exibir dados tabulares de forma organizada e flexível. Suporta colunas customizáveis, paginação opcional e estados de carregamento.\n\n## Quando Usar\n\n- Para exibir listas de dados estruturados\n- Quando precisar de paginação para grandes volumes de dados\n- Para criar interfaces de administração e dashboards\n- Em relatórios e visualizações de dados\n\n## Acessibilidade\n\n- Suporta navegação por teclado\n- Implementa semântica apropriada com elementos table\n- Compatível com leitores de tela\n- Mantém foco visível durante navegação\n        `\n      }\n    }\n  },\n  argTypes: {\n    data: {\n      description: 'Array of data objects to display in the table',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'T[]' },\n        defaultValue: { summary: '[]' }\n      }\n    },\n    columns: {\n      description: 'Array of column definitions with label and accessor properties',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'TableColumn<T>[]' }\n      }\n    },\n    pageSize: {\n      description: 'Number of items per page (undefined disables pagination)',\n      control: { type: 'number' },\n      table: {\n        type: { summary: 'number | undefined' },\n        defaultValue: { summary: 'undefined' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonComponent>",
        "defaultValue": "{\n  title: 'Components/UI/Button',\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Um componente de botão flexível com múltiplas variantes, tamanhos e estados, seguindo as diretrizes de acessibilidade.'\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'dark',\n        'blue',\n        'green',\n        'orange',\n        'outlineGreen',\n        'outlineOrange'\n      ] as ButtonVariant[],\n      description: 'Variante visual do botão'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'] as ButtonSize[],\n      description: 'Tamanho do botão'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'Tipo HTML do botão'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Estado de carregamento do botão'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Se o botão está desabilitado'\n    },\n    className: {\n      control: 'text',\n      description: 'Classes CSS adicionais'\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Label acessível do botão'\n    },\n    ariaDescribedBy: {\n      control: 'text',\n      description: 'ID do elemento que descreve o botão'\n    },\n    ariaPressed: {\n      control: 'boolean',\n      description: 'Estado pressionado para botões toggle'\n    },\n    role: {\n      control: 'text',\n      description: 'Role ARIA customizado'\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Texto para leitores de tela durante carregamento'\n    },\n    buttonClick: {\n      action: 'clicked',\n      description: 'Evento emitido quando o botão é clicado'\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<DialogComponent>",
        "defaultValue": "{\n  title: 'Components/UI/Dialog',\n  component: DialogComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO componente Dialog fornece uma interface modal para exibir conteúdo sobreposto, incluindo formulários de login, registro, confirmações e outros conteúdos de overlay. Oferece suporte a blur de fundo, gerenciamento de foco e acessibilidade.\n\n## Quando Usar\n\n- Para formulários de login e registro\n- Para confirmações de ações importantes\n- Para exibir conteúdo que requer atenção imediata do usuário\n- Para modais com conteúdo customizado\n\n## Acessibilidade\n\n- Suporta navegação por teclado (Tab, Escape)\n- Implementa aria-label e aria-labelledby apropriados\n- Gerencia foco automaticamente quando aberto/fechado\n- Suporta fechamento via tecla Escape\n        `\n      }\n    }\n  },\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Controls whether the dialog is visible',\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    title: {\n      control: 'text',\n      description: 'Title displayed in the dialog header',\n      table: {\n        defaultValue: { summary: '\"\"' },\n        type: { summary: 'string' }\n      }\n    },\n    showCloseButton: {\n      control: 'boolean',\n      description: 'Whether to show the close button in the header',\n      table: {\n        defaultValue: { summary: 'true' },\n        type: { summary: 'boolean' }\n      }\n    },\n    closeOnBackdropClick: {\n      control: 'boolean',\n      description: 'Whether clicking the backdrop closes the dialog',\n      table: {\n        defaultValue: { summary: 'true' },\n        type: { summary: 'boolean' }\n      }\n    },\n    closeOnEscape: {\n      control: 'boolean',\n      description: 'Whether pressing escape closes the dialog',\n      table: {\n        defaultValue: { summary: 'true' },\n        type: { summary: 'boolean' }\n      }\n    },\n    maxWidth: {\n      control: 'text',\n      description: 'Maximum width of the dialog container',\n      table: {\n        defaultValue: { summary: '32rem' },\n        type: { summary: 'string' }\n      }\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Custom aria-label for the dialog',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    close: {\n      action: 'close',\n      description: 'Event emitted when dialog is closed',\n      table: {\n        disable: true\n      }\n    }\n  }\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ImgComponent>",
        "defaultValue": "{\n  title: 'Components/UI/Img',\n  component: ImgComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\nThe \\`bb-img\\` component is a flexible image component that can handle both internal assets through the shared assets system and external URLs. It supports SVG and standard image formats with loading states, error handling, and accessibility features.\n\n## Features\n- Support for internal assets via \\`getAssetContent\\`\n- External URL support\n- SVG and standard image format handling\n- Loading and error states\n- Configurable sizes\n- Accessibility compliant\n- Custom CSS classes support\n        `\n      }\n    }\n  },\n  argTypes: {\n    src: {\n      control: 'text',\n      description: 'The source path or URL of the image',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    alt: {\n      control: 'text',\n      description: 'Alternative text for the image',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    size: {\n      control: 'select',\n      options: ['xs', 'sm', 'md', 'lg', 'xl', 'full'],\n      description: 'The size of the image',\n      table: {\n        defaultValue: { summary: 'md' },\n        type: { summary: 'ImageSize' }\n      }\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    isDecorative: {\n      control: 'boolean',\n      description: 'Whether the image is decorative (hidden from screen readers)',\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Custom loading text for screen readers',\n      table: {\n        defaultValue: { summary: 'Carregando imagem...' },\n        type: { summary: 'string' }\n      }\n    },\n    errorText: {\n      control: 'text',\n      description: 'Custom error text for screen readers',\n      table: {\n        defaultValue: { summary: 'Erro ao carregar imagem' },\n        type: { summary: 'string' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<LogoComponent>",
        "defaultValue": "{\n  title: 'Components/UI/Logo',\n  component: LogoComponent,\n  parameters: {\n    layout: 'centered',\n    badges: ['stable', 'accessible']\n  },\n  argTypes: {\n    variant: {\n      options: ['full', 'icon'],\n      control: { type: 'radio' }\n    },\n    size: {\n      options: ['sm', 'md', 'lg'],\n      control: { type: 'radio' }\n    },\n    className: {\n      control: { type: 'text' }\n    },\n    ariaLabel: {\n      control: { type: 'text' }\n    },\n    isDecorative: {\n      control: { type: 'boolean' }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<PopoverComponent>",
        "defaultValue": "{\n  title: 'Components/UI/Popover',\n  component: PopoverComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO componente Popover fornece uma sobreposição contextual que aparece próxima a um elemento de gatilho. É útil para exibir informações adicionais, menus ou controles.\n\n## Quando Usar\n\n- Para menus de contexto e dropdowns\n- Para exibir informações adicionais sobre um elemento\n- Para tooltips complexos com conteúdo interativo\n\n## Acessibilidade\n\n- Suporta navegação por teclado (Enter/Space para abrir, Escape para fechar)\n- Implementa foco adequado no conteúdo do popover\n- Permite fechamento ao clicar fora (configurável)\n        `\n      }\n    }\n  },\n  argTypes: {\n    position: {\n      description: 'Define a posição do popover em relação ao elemento trigger',\n      options: [\n        'top',\n        'bottom',\n        'left',\n        'right',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end'\n      ] as PopoverPosition[],\n      control: { type: 'select' },\n      table: {\n        defaultValue: { summary: 'bottom-start' }\n      }\n    },\n    disabled: {\n      description: 'Desabilita a abertura do popover',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' }\n      }\n    },\n    closeOnClickOutside: {\n      description: 'Determina se o popover deve fechar ao clicar fora dele',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'true' }\n      }\n    },\n    closeOnEscape: {\n      description: 'Determina se o popover deve fechar ao pressionar Escape',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'true' }\n      }\n    },\n    offset: {\n      description: 'Distância em pixels entre o trigger e o popover',\n      control: { type: 'number', min: 0, max: 50, step: 1 },\n      table: {\n        defaultValue: { summary: '8' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ToastComponent>",
        "defaultValue": "{\n  title: 'Components/UI/Toast', //\n  component: ToastComponent, //\n  parameters: {\n    layout: 'fullscreen', // Toast is positioned, so fullscreen might be better for context\n    docs: {\n      description: {\n        component:\n          'Um componente de notificação que exibe mensagens temporárias ao usuário, com suporte a diferentes tipos de variantes (sucesso, erro, informação) e fechamento automático ou manual.' //\n      }\n    }\n  },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `\n      <div style=\"position: relative; height: 150px;\">\n      ${story}\n      </div>`\n    )\n  ],\n  argTypes: {\n    message: {\n      control: 'text',\n      description: 'A mensagem a ser exibida no toast.',\n      defaultValue: 'Esta é uma mensagem de notificação.'\n    },\n    variant: {\n      control: 'select',\n      options: ['success', 'error', 'info'],\n      description: 'Define a variação visual do toast.',\n      defaultValue: 'info'\n    },\n    show: {\n      control: 'boolean',\n      description: 'Controla a visibilidade do toast.',\n      defaultValue: true\n    },\n    duration: {\n      control: 'number',\n      description:\n        'Duração em milissegundos para o toast fechar automaticamente. 0 para não fechar.',\n      defaultValue: 0\n    },\n    toastClose: {\n      action: 'toastClosed',\n      description: 'Evento emitido quando o toast é fechado.'\n    }\n  },\n  tags: ['autodocs']\n}"
      },
      {
        "name": "MiddlePage",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/paginator/paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    currentPage: 15,\n    totalPages: 30\n  }\n}"
      },
      {
        "name": "mockOptions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "SelectOption[]",
        "defaultValue": "[\n  { value: 'br', label: 'Brazil' },\n  { value: 'us', label: 'United States' },\n  { value: 'ca', label: 'Canada' },\n  { value: 'mx', label: 'Mexico' },\n  { value: 'ar', label: 'Argentina' },\n  { value: 'cl', label: 'Chile' },\n  { value: 'pe', label: 'Peru' },\n  { value: 'co', label: 'Colombia' }\n]"
      },
      {
        "name": "mockOptionsWithDisabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "SelectOption[]",
        "defaultValue": "[\n  { value: 'active', label: 'Active' },\n  { value: 'inactive', label: 'Inactive' },\n  { value: 'pending', label: 'Pending', disabled: true },\n  { value: 'suspended', label: 'Suspended' }\n]"
      },
      {
        "name": "MultipleSelection",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Countries',\n    multiple: true,\n    value: ['br', 'us'],\n    clearable: true,\n    helperText: 'You can select multiple countries. Selected items appear as tags.'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Multiple Selection\n\nEnables selection of multiple options. Selected items are displayed as removable tags.\n\n\\`\\`\\`html\n<bb-select \n  [options]=\"countries\" \n  [multiple]=\"true\" \n  [value]=\"['br', 'us']\"\n  [clearable]=\"true\"\n  label=\"Countries\">\n</bb-select>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "NoBackdropClose",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Cannot Close on Backdrop',\n    showCloseButton: true,\n    closeOnBackdropClick: false,\n    closeOnEscape: false,\n    maxWidth: '24rem',\n    ariaLabel: 'Modal dialog requiring explicit closure'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          This dialog cannot be closed by clicking outside or pressing Escape. You must use the close button.\n        </p>\n        <div class=\"flex justify-end\">\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Close\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Dialog that requires explicit closure via the close button, useful for important forms or confirmations.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Number",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'number',\n    label: 'Idade',\n    placeholder: '25'\n  }\n}"
      },
      {
        "name": "OutlineGreen",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'outlineGreen',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Green</bb-button>`\n  })\n}"
      },
      {
        "name": "OutlineOrange",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'outlineOrange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Orange</bb-button>`\n  })\n}"
      },
      {
        "name": "Password",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'password',\n    label: 'Senha',\n    placeholder: 'Digite sua senha',\n    showPasswordToggle: true,\n    helperText: 'A senha deve ter pelo menos 8 caracteres'\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Playground checkbox',\n    helperText: 'Customize all properties using the controls below',\n    checked: false,\n    indeterminate: false,\n    variant: 'default',\n    size: 'md',\n    disabled: false,\n    readonly: false,\n    required: false,\n    errorMessage: '',\n    successMessage: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Interactive playground to test all checkbox properties and configurations. Use the controls panel to experiment with different combinations.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Interactive Select',\n    helperText: 'Try different configurations using the controls below',\n    variant: 'default',\n    size: 'sm',\n    multiple: false,\n    searchable: false,\n    clearable: false,\n    disabled: false,\n    readonly: false,\n    required: false,\n    loading: false,\n    placeholder: 'Select an option',\n    options: mockOptions\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-select ${argsToTemplate(args)}></bb-select>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Interactive playground to experiment with all select component properties. Use the controls panel to test different configurations.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 5\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Use os controles abaixo para experimentar diferentes configurações do componente.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Playground Dialog',\n    showCloseButton: true,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '32rem',\n    ariaLabel: ''\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          Use the controls panel to experiment with all dialog properties and see how they affect the component behavior.\n        </p>\n        <div class=\"bg-gray-50 p-4 rounded mb-4\">\n          <h4 class=\"font-medium mb-2\">Current Settings:</h4>\n          <ul class=\"text-sm text-gray-600 space-y-1\">\n            <li>Show Close Button: {{ showCloseButton ? 'Yes' : 'No' }}</li>\n            <li>Close on Backdrop: {{ closeOnBackdropClick ? 'Yes' : 'No' }}</li>\n            <li>Close on Escape: {{ closeOnEscape ? 'Yes' : 'No' }}</li>\n            <li>Max Width: {{ maxWidth }}</li>\n          </ul>\n        </div>\n        <div class=\"flex gap-3 justify-end\">\n          <button class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n            Cancel\n          </button>\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Apply\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  })\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/200/200',\n    alt: 'Interactive playground image',\n    size: 'md',\n    className: '',\n    isDecorative: false,\n    loadingText: 'Carregando imagem...',\n    errorText: 'Erro ao carregar imagem'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-img ${argsToTemplate(args)}></bb-img>`\n  })\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    ariaLabel: undefined,\n    isDecorative: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-logo ${argsToTemplate(args)}></bb-logo>`\n  })\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    position: 'bottom-start',\n    disabled: false,\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    offset: 8\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 bg-bytebank-blue text-white rounded-lg hover:bg-bytebank-blue/90\">\n          Playground\n        </button>\n        <div slot=\"content\" class=\"p-4 min-w-[200px]\">\n          <h3 class=\"text-sm font-medium text-gray-900 mb-2\">Configurações</h3>\n          <p class=\"text-xs text-gray-600\">Use os controles para experimentar diferentes opções.</p>\n        </div>\n      </bb-popover>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Use os controles abaixo para experimentar diferentes configurações do popover.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Playground",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    message: 'Mensagem customizável do Toast.',\n    variant: 'info',\n    show: true,\n    duration: 5000\n  }\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": ".storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  }\n}"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Primary Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Readonly",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Campo somente leitura',\n    readonly: true,\n    value: 'Este valor não pode ser editado'\n  }\n}"
      },
      {
        "name": "ReadonlyState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    readonly: true,\n    value: 'br',\n    helperText: 'This field is readonly - value can be seen but not changed'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Readonly state displays the current value but prevents changes.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "RegisterForm",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Create Account',\n    showCloseButton: true,\n    closeOnBackdropClick: false,\n    closeOnEscape: true,\n    maxWidth: '32rem',\n    ariaLabel: 'Registration form dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Registration dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <form class=\"space-y-4\">\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                First Name\n              </label>\n              <input \n                id=\"firstName\"\n                type=\"text\" \n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"John\"\n              />\n            </div>\n            <div>\n              <label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                Last Name\n              </label>\n              <input \n                id=\"lastName\"\n                type=\"text\" \n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Doe\"\n              />\n            </div>\n          </div>\n          <div>\n            <label for=\"regEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input \n              id=\"regEmail\"\n              type=\"email\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"john.doe@example.com\"\n            />\n          </div>\n          <div>\n            <label for=\"regPassword\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input \n              id=\"regPassword\"\n              type=\"password\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Create a strong password\"\n            />\n          </div>\n          <div>\n            <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Confirm Password\n            </label>\n            <input \n              id=\"confirmPassword\"\n              type=\"password\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Confirm your password\"\n            />\n          </div>\n          <div class=\"flex items-center justify-end gap-3 pt-4\">\n            <button type=\"button\" class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"px-4 py-2 bg-green-600 text-white hover:bg-green-700 rounded\">\n              Create Account\n            </button>\n          </div>\n        </form>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Registration Form Dialog\n\nDemonstra o uso do Dialog para formulários de registro com múltiplos campos.\nUtiliza um layout responsivo em grade para otimizar o espaço.\n\n**Características:**\n- Layout em grade para campos de nome\n- Validação visual via focus rings\n- Tamanho maior para acomodar mais campos\n- Botão de ação diferenciado (verde para registro)\n\n\\`\\`\\`html\n<bb-dialog \n  [isOpen]=\"isRegisterOpen\"\n  title=\"Create Account\"\n  [closeOnBackdropClick]=\"false\"\n  maxWidth=\"32rem\"\n  (close)=\"handleRegisterClose()\"\n>\n  <!-- Registration form content -->\n</bb-dialog>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "Required",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Campo obrigatório',\n    placeholder: 'Este campo é obrigatório',\n    required: true,\n    helperText: 'Este campo deve ser preenchido'\n  }\n}"
      },
      {
        "name": "ResponsiveLayout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"w-full max-w-4xl mx-auto\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Basic Options</h4>\n            <bb-checkbox label=\"Enable notifications\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Auto-save changes\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Show preview\" [checked]=\"true\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Privacy Settings</h4>\n            <bb-checkbox label=\"Make profile public\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Allow contact from others\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Show online status\" [checked]=\"false\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Advanced Features</h4>\n            <bb-checkbox label=\"Enable beta features\" variant=\"warning\" [checked]=\"false\" helperText=\"May be unstable\"></bb-checkbox>\n            <bb-checkbox label=\"Developer mode\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Debug logging\" [checked]=\"false\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'responsive'\n    },\n    docs: {\n      description: {\n        story: `\n### Responsive Layout\n\nThis story demonstrates how checkboxes adapt to different screen sizes using responsive grid layouts.\nThe layout automatically adjusts from single column on mobile to three columns on larger screens.\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "ResponsiveLayout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: sampleData.slice(0, 5),\n    columns: sampleColumns,\n    pageSize: undefined\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"w-full\">\n        <bb-generic-table ${argsToTemplate(args)}></bb-generic-table>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1'\n    },\n    docs: {\n      description: {\n        story:\n          'Visualiza como a tabela se adapta em diferentes tamanhos de tela. Use o controle de viewport para testar.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "ResponsiveLayout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <div class=\"md:hidden\">\n          <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        </div>\n        <div class=\"hidden md:block\">\n          <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        </div>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "sampleColumns",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "TableColumn[]",
        "defaultValue": "[\n  { label: 'ID', accessor: 'id' },\n  { label: 'Name', accessor: 'name' },\n  { label: 'Email', accessor: 'email' },\n  { label: 'Status', accessor: 'status' },\n  { label: 'Amount', accessor: 'amount' }\n]"
      },
      {
        "name": "sampleData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "SampleData[]",
        "defaultValue": "[\n  { id: 1, name: 'John Doe', email: 'john@example.com', status: 'active', amount: 1500 },\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com', status: 'inactive', amount: 2300 },\n  { id: 3, name: 'Bob Johnson', email: 'bob@example.com', status: 'active', amount: 1200 },\n  { id: 4, name: 'Alice Brown', email: 'alice@example.com', status: 'active', amount: 3400 },\n  { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', status: 'inactive', amount: 890 },\n  { id: 6, name: 'David Miller', email: 'david@example.com', status: 'active', amount: 2100 },\n  { id: 7, name: 'Eva Garcia', email: 'eva@example.com', status: 'inactive', amount: 1750 },\n  { id: 8, name: 'Frank Davis', email: 'frank@example.com', status: 'active', amount: 2800 },\n  { id: 9, name: 'Grace Lee', email: 'grace@example.com', status: 'active', amount: 3200 },\n  { id: 10, name: 'Henry Taylor', email: 'henry@example.com', status: 'inactive', amount: 1950 },\n  { id: 11, name: 'Isabel Martinez', email: 'isabel@example.com', status: 'active', amount: 2650 },\n  { id: 12, name: 'Jack Anderson', email: 'jack@example.com', status: 'active', amount: 1400 }\n]"
      },
      {
        "name": "Search",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'search',\n    placeholder: 'Buscar...',\n    prefixIcon: SearchIcon\n  }\n}"
      },
      {
        "name": "SearchableSelect",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    searchable: true,\n    clearable: true,\n    searchPlaceholder: 'Type to search countries...',\n    helperText: 'Start typing to filter options dynamically'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Searchable select allows users to filter options by typing. Perfect for large lists of options.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'dark',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Secondary Button</bb-button>`\n  })\n}"
      },
      {
        "name": "SizeComparison",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 16px; align-items: center; flex-wrap: wrap;\">\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra small\" size=\"xs\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Small\" size=\"sm\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Medium\" size=\"md\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Large\" size=\"lg\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra large\" size=\"xl\"></bb-img>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Comparison of all available sizes: xs, sm, md, lg, xl.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'sm',\n    label: 'Tamanho pequeno',\n    placeholder: 'Input pequeno'\n  }\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/100/100',\n    alt: 'Small image',\n    size: 'sm'\n  }\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'success',\n    label: 'Campo válido',\n    value: 'Dados corretos',\n    successMessage: 'Perfeito! Os dados estão corretos.'\n  }\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'green',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Success Button</bb-button>`\n  })\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Operação realizada com sucesso!',\n    variant: 'success',\n    duration: 0\n  }\n}"
      },
      {
        "name": "SuccessState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Selection',\n    variant: 'success',\n    value: 'br',\n    successMessage: 'Great choice! Brazil selected successfully'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Success state provides positive feedback after a valid selection.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "ToggleButton",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaPressed: false,\n    ariaLabel: 'Toggle notifications'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>🔔 Notifications</bb-button>`\n  })\n}"
      },
      {
        "name": "ValidationStates",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6 w-80\">\n        <bb-input\n          label=\"Campo válido\"\n          variant=\"success\"\n          value=\"dados@corretos.com\"\n          successMessage=\"Email válido!\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com erro\"\n          variant=\"error\"\n          value=\"email-inválido\"\n          errorMessage=\"Por favor, insira um email válido.\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com aviso\"\n          variant=\"warning\"\n          value=\"exemplo@teste.com\"\n          helperText=\"Certifique-se de que este email está correto.\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'warning',\n    label: 'Campo com aviso',\n    value: 'dados-atenção',\n    helperText: 'Atenção: verifique se os dados estão corretos.'\n  }\n}"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'orange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Warning Button</bb-button>`\n  })\n}"
      },
      {
        "name": "WarningState",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    variant: 'warning',\n    value: 'us',\n    helperText: 'Please verify your selection before proceeding'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Warning state draws attention to selections that may need verification.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithAccessibility",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaLabel: 'Save document',\n    ariaDescribedBy: 'save-help-text'\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div>\n        <bb-button ${argsToTemplate(args)}>Save</bb-button>\n        <p id=\"save-help-text\" style=\"margin-top: 0.5rem; font-size: 0.875rem; color: #6b7280;\">\n          This will save your current document to the cloud\n        </p>\n      </div>\n    `\n  })\n}"
      },
      {
        "name": "WithCustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/300/300',\n    alt: 'Image with custom styling',\n    size: 'md',\n    className: 'rounded-full shadow-lg'\n  }\n}"
      },
      {
        "name": "WithCustomRender",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <ng-template #statusTemplate let-value let-row=\"row\">\n          <span class=\"px-2 py-1 rounded-full text-xs\" \n                [ngClass]=\"{\n                  'bg-green-100 text-green-800': value === 'active',\n                  'bg-red-100 text-red-800': value === 'inactive'\n                }\">\n            {{ value === 'active' ? '✓ Ativo' : '✗ Inativo' }}\n          </span>\n        </ng-template>\n\n        <bb-generic-table \n          [data]=\"customData\" \n          [columns]=\"getCustomColumns(statusTemplate)\">\n        </bb-generic-table>\n      </div>\n    `,\n    props: {\n      customData: [\n        { id: 1, name: 'John Doe', email: 'john@example.com', status: 'active' },\n        { id: 2, name: 'Jane Smith', email: 'jane@example.com', status: 'inactive' },\n        { id: 3, name: 'Bob Johnson', email: 'bob@example.com', status: 'active' },\n        { id: 4, name: 'Alice Brown', email: 'alice@example.com', status: 'active' },\n        { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', status: 'inactive' }\n      ],\n      getCustomColumns: (statusTemplate: any) => [\n        { label: 'ID', accessor: 'id' },\n        { label: 'Name', accessor: 'name' },\n        { label: 'Email', accessor: 'email' },\n        { label: 'Status', accessor: 'status', render: statusTemplate }\n      ]\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela com Renderização Customizada\n\nEsta story demonstra como usar a propriedade \\`render\\` das colunas com templates Angular para customizar a exibição dos dados:\n\n- **Status**: Exibe badges coloridos com ícones para status ativo/inativo\n\\`\\`\\`\n<!-- Uso na tabela -->\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"[{ label: 'Status', accessor: 'status', render: statusTemplate }]\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithDisabledOptions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Status',\n    options: mockOptionsWithDisabled,\n    helperText: 'Some options are disabled and cannot be selected'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstrates how disabled options appear in the dropdown. They are visually distinct and not selectable.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithHelperText",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    helperText: 'Utilizaremos este email para entrar em contato'\n  }\n}"
      },
      {
        "name": "WithLabel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Nome completo',\n    placeholder: 'Digite seu nome completo'\n  }\n}"
      },
      {
        "name": "WithoutCloseButton",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Dialog Without Close Button',\n    showCloseButton: false,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '28rem',\n    ariaLabel: 'Important notification dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          This dialog doesn't show a close button. It can only be closed by clicking outside or pressing Escape.\n        </p>\n        <div class=\"flex gap-3 justify-end\">\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Acknowledge\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Dialog variant without the close button, useful for critical notifications that require user acknowledgment.'\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithoutPagination",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: sampleData.slice(0, 5),\n    columns: sampleColumns,\n    pageSize: undefined\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela sem Paginação\n\nQuando \\`pageSize\\` é undefined, a paginação é desabilitada e todos os dados são exibidos de uma vez.\n\n\\`\\`\\`html\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"columns\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithoutTitle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: '',\n    showCloseButton: true,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '24rem',\n    ariaLabel: 'Confirmation dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Confirmation dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <div class=\"text-center\">\n          <div class=\"w-12 h-12 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center\">\n            <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n          </div>\n          <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Delete Account</h3>\n          <p class=\"text-gray-600 mb-6\">\n            Are you sure you want to delete your account? This action cannot be undone.\n          </p>\n          <div class=\"flex gap-3 justify-center\">\n            <button class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n              Cancel\n            </button>\n            <button class=\"px-4 py-2 bg-red-600 text-white hover:bg-red-700 rounded\">\n              Delete\n            </button>\n          </div>\n        </div>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Dialog Without Header Title\n\nDemonstra um dialog sem título no cabeçalho, útil para confirmações visuais onde o conteúdo é auto-explicativo.\n\n**Características:**\n- Sem título no cabeçalho\n- Conteúdo centralizado\n- Ícone visual para comunicação rápida\n- aria-label obrigatório para acessibilidade\n\n\\`\\`\\`html\n<bb-dialog \n  [isOpen]=\"isDeleteOpen\"\n  title=\"\"\n  ariaLabel=\"Delete confirmation dialog\"\n  maxWidth=\"24rem\"\n  (close)=\"handleDeleteClose()\"\n>\n  <!-- Centered confirmation content -->\n</bb-dialog>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithPagination",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 3\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela com Paginação\n\nEsta story demonstra o uso da tabela com paginação habilitada, útil para grandes volumes de dados.\n\n\\`\\`\\`html\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"columns\" \n  [pageSize]=\"3\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
      },
      {
        "name": "WithPrefixIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Usuário',\n    placeholder: 'Digite seu usuário',\n    prefixIcon: UserRoundIcon\n  }\n}"
      },
      {
        "name": "WithSuffixIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Website',\n    placeholder: 'https://exemplo.com',\n    suffixIcon: Link\n  }\n}"
      },
      {
        "name": "WithValue",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Country',\n    value: 'br',\n    helperText: 'Brazil is pre-selected',\n    clearable: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows a select with a pre-selected value. Notice the clear button appears when clearable is enabled.'\n      }\n    }\n  }\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<CheckboxComponent>",
        "file": "src/form/checkbox/checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<InputComponent>",
        "file": "src/form/input/input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<SelectComponent>",
        "file": "src/form/select/select.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<PaginatorComponent>",
        "file": "src/table/paginator/paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<GenericTableComponent<SampleData>>",
        "file": "src/table/generic-table/generic-table.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ButtonComponent>",
        "file": "src/ui/button/button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<DialogComponent>",
        "file": "src/ui/dialog/dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ImgComponent>",
        "file": "src/ui/img/img.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<LogoComponent>",
        "file": "src/ui/logo/logo.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<PopoverComponent>",
        "file": "src/ui/popover/popover.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ToastComponent>",
        "file": "src/ui/toast/toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/form/checkbox/checkbox.component.stories.ts": [
        {
          "name": "AccessibilityDemo",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6\">\n        <div class=\"bg-blue-50 p-4 rounded-lg\">\n          <h3 class=\"font-medium text-blue-900 mb-2\">Accessibility Features Demo</h3>\n          <p class=\"text-blue-700 text-sm mb-4\">\n            Try navigating with keyboard (Tab/Space) or screen reader to experience accessibility features.\n          </p>\n        </div>\n        \n        <fieldset class=\"space-y-4\">\n          <legend class=\"font-medium text-gray-900\">Subscription Preferences</legend>\n          \n          <bb-checkbox \n            label=\"Weekly newsletter\"\n            helperText=\"Receive our weekly digest every Monday\"\n            [checked]=\"true\"\n            [required]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Product updates\"\n            helperText=\"Get notified about new features and improvements\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing communications\"\n            helperText=\"Promotional offers and special deals\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Terms and Conditions\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </fieldset>\n        \n        <div class=\"text-sm text-gray-600 space-y-2\">\n          <p><strong>Keyboard Navigation:</strong></p>\n          <ul class=\"list-disc list-inside space-y-1 ml-4\">\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Tab</kbd> to navigate between checkboxes</li>\n            <li>Use <kbd class=\"px-1 py-0.5 bg-gray-200 rounded text-xs\">Space</kbd> to toggle checkbox state</li>\n            <li>Screen readers will announce label, state, and helper text</li>\n          </ul>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          { id: 'color-contrast', enabled: true },\n          { id: 'keyboard-navigation', enabled: true },\n          { id: 'aria-valid-attr', enabled: true }\n        ]\n      }\n    },\n    docs: {\n      description: {\n        story: `\n### Accessibility Demonstration\n\nThis story showcases the checkbox component's accessibility features:\n\n- **Keyboard Navigation**: Full keyboard support with Tab and Space keys\n- **Screen Reader Support**: Proper ARIA attributes and semantic HTML\n- **Focus Management**: Clear visual focus indicators\n- **Color Contrast**: WCAG compliant color combinations\n- **Error Announcements**: Live regions for dynamic state changes\n- **Required Field Indicators**: Visual and programmatic indication\n\nAll checkboxes are properly labeled and associated with their help text and error messages.\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Visual Variants</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Default variant\" variant=\"default\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Success variant\" variant=\"success\" [checked]=\"true\" successMessage=\"Validated successfully\"></bb-checkbox>\n            <bb-checkbox label=\"Error variant\" variant=\"error\" [checked]=\"false\" [required]=\"true\" errorMessage=\"This field is required\"></bb-checkbox>\n            <bb-checkbox label=\"Warning variant\" variant=\"warning\" [checked]=\"true\" helperText=\"Proceed with caution\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">Sizes</h3>\n          <div class=\"flex items-center gap-6\">\n            <bb-checkbox label=\"Small\" size=\"sm\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Medium\" size=\"md\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Large\" size=\"lg\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-col gap-3\">\n          <h3 class=\"text-sm font-medium text-gray-700\">States</h3>\n          <div class=\"grid grid-cols-2 gap-4\">\n            <bb-checkbox label=\"Unchecked\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Checked\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Indeterminate\" [indeterminate]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Disabled Checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Readonly\" [readonly]=\"true\" [checked]=\"true\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'This story displays all available variants, sizes, and states of the checkbox component for easy comparison.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Accept terms and conditions',\n    checked: false,\n    variant: 'default',\n    size: 'md'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  })\n}"
        },
        {
          "name": "DisabledState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4\">\n        <bb-checkbox label=\"Disabled unchecked\" [disabled]=\"true\" [checked]=\"false\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled checked\" [disabled]=\"true\" [checked]=\"true\"></bb-checkbox>\n        <bb-checkbox label=\"Disabled indeterminate\" [disabled]=\"true\" [indeterminate]=\"true\"></bb-checkbox>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows disabled checkboxes in different states. Disabled checkboxes cannot be interacted with.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ErrorState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Required agreement',\n    errorMessage: 'You must accept the terms to continue',\n    checked: false,\n    variant: 'error',\n    size: 'md',\n    required: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstrates error state with validation message. Used when user input is invalid or required field is empty.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "FormIntegration",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <form class=\"space-y-6 max-w-md\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Account Preferences</h3>\n          \n          <bb-checkbox \n            label=\"Email notifications\"\n            helperText=\"Receive updates about your account\"\n            [checked]=\"true\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"SMS notifications\"\n            helperText=\"Get important alerts via text message\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"Marketing emails\"\n            helperText=\"Receive promotional content and offers\"\n            variant=\"warning\"\n            [checked]=\"false\">\n          </bb-checkbox>\n        </div>\n        \n        <div class=\"border-t pt-4\">\n          <bb-checkbox \n            label=\"I agree to the Terms of Service\"\n            errorMessage=\"You must accept the terms to continue\"\n            variant=\"error\"\n            [required]=\"true\"\n            [checked]=\"false\">\n          </bb-checkbox>\n          \n          <bb-checkbox \n            label=\"I agree to the Privacy Policy\"\n            [required]=\"true\"\n            [checked]=\"true\">\n          </bb-checkbox>\n        </div>\n        \n        <button \n          type=\"submit\" \n          class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n          disabled>\n          Save Preferences\n        </button>\n      </form>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Form Integration Example\n\nDemonstrates how checkboxes work within forms, showing:\n- Different variants for different types of choices\n- Required field validation\n- Helper text for guidance\n- Error states for invalid inputs\n- Grouped related options\n\nThis pattern is common in settings pages, registration forms, and preference panels.\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "LoadingState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Processing selection...',\n    disabled: true,\n    helperText: 'Please wait while we validate your choice',\n    variant: 'default',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Represents a checkbox in a loading/processing state where user interaction is temporarily disabled.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<CheckboxComponent>",
          "defaultValue": "{\n  title: 'Components/Form/Checkbox',\n  component: CheckboxComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Description\n\nThe Checkbox component provides a selectable input for binary choices or multiple selections in forms and interfaces.\n\n## When to Use\n\n- For binary choices (agree/disagree, yes/no)\n- For multiple selections from a list of options\n- To confirm actions or acknowledge terms\n- In forms requiring user consent or preference selection\n\n## Features\n\n- Support for checked, unchecked, and indeterminate states\n- Multiple visual variants (default, success, error, warning)\n- Different sizes (sm, md, lg)\n- Accessibility compliant with ARIA attributes\n- Form integration with validation states\n- Helper text and error message support\n\n## Accessibility\n\n- Supports keyboard navigation (Space to toggle)\n- Implements proper ARIA attributes and roles\n- Screen reader friendly with descriptive labels\n- Visual focus indicators for keyboard users\n- Color contrast compliant in all states\n- Live regions for dynamic state announcements\n        `\n      }\n    }\n  },\n  argTypes: {\n    checked: {\n      description: 'Whether the checkbox is checked',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    indeterminate: {\n      description: 'Whether the checkbox is in indeterminate state (partially checked)',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    variant: {\n      description: 'Visual variant of the checkbox',\n      options: ['default', 'success', 'error', 'warning'],\n      control: {\n        type: 'select',\n        labels: {\n          default: '🔵 Default',\n          success: '✅ Success',\n          error: '❌ Error',\n          warning: '⚠️ Warning'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxVariant' },\n        defaultValue: { summary: 'default' }\n      }\n    },\n    size: {\n      description: 'Size of the checkbox',\n      options: ['sm', 'md', 'lg'],\n      control: {\n        type: 'radio',\n        labels: {\n          sm: '📦 Small',\n          md: '📋 Medium',\n          lg: '📊 Large'\n        }\n      },\n      table: {\n        type: { summary: 'CheckboxSize' },\n        defaultValue: { summary: 'md' }\n      }\n    },\n    disabled: {\n      description: 'Whether the checkbox is disabled',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    readonly: {\n      description: 'Whether the checkbox is readonly',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    required: {\n      description: 'Whether the checkbox is required',\n      control: { type: 'boolean' },\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' }\n      }\n    },\n    label: {\n      description: 'Label text for the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    helperText: {\n      description: 'Helper text displayed below the checkbox',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    errorMessage: {\n      description: 'Error message displayed when variant is error',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    successMessage: {\n      description: 'Success message displayed when variant is success',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Playground checkbox',\n    helperText: 'Customize all properties using the controls below',\n    checked: false,\n    indeterminate: false,\n    variant: 'default',\n    size: 'md',\n    disabled: false,\n    readonly: false,\n    required: false,\n    errorMessage: '',\n    successMessage: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-checkbox ${argsToTemplate(args)}></bb-checkbox>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Interactive playground to test all checkbox properties and configurations. Use the controls panel to experiment with different combinations.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ResponsiveLayout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"w-full max-w-4xl mx-auto\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Basic Options</h4>\n            <bb-checkbox label=\"Enable notifications\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Auto-save changes\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Show preview\" [checked]=\"true\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Privacy Settings</h4>\n            <bb-checkbox label=\"Make profile public\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Allow contact from others\" [checked]=\"true\"></bb-checkbox>\n            <bb-checkbox label=\"Show online status\" [checked]=\"false\"></bb-checkbox>\n          </div>\n          \n          <div class=\"space-y-3\">\n            <h4 class=\"font-medium text-gray-900\">Advanced Features</h4>\n            <bb-checkbox label=\"Enable beta features\" variant=\"warning\" [checked]=\"false\" helperText=\"May be unstable\"></bb-checkbox>\n            <bb-checkbox label=\"Developer mode\" [checked]=\"false\"></bb-checkbox>\n            <bb-checkbox label=\"Debug logging\" [checked]=\"false\"></bb-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'responsive'\n    },\n    docs: {\n      description: {\n        story: `\n### Responsive Layout\n\nThis story demonstrates how checkboxes adapt to different screen sizes using responsive grid layouts.\nThe layout automatically adjusts from single column on mobile to three columns on larger screens.\n        `\n      }\n    }\n  }\n}"
        }
      ],
      "src/ui/logo/logo.component.stories.ts": [
        {
          "name": "AccessibilityStates",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" ariaLabel=\"Logo ByteBank Pro\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\" [isDecorative]=\"true\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "AllSizes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"lg\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem;\">\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"icon\" size=\"md\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "CustomStyling",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <bb-logo variant=\"full\" size=\"md\" className=\"opacity-75\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"lg\" className=\"drop-shadow-lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\" className=\"w-24 md:w-32 lg:w-40\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    isDecorative: false\n  }\n}"
        },
        {
          "name": "InContext",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <bb-logo variant=\"full\" size=\"lg\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        <bb-logo variant=\"full\" size=\"sm\"></bb-logo>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<LogoComponent>",
          "defaultValue": "{\n  title: 'Components/UI/Logo',\n  component: LogoComponent,\n  parameters: {\n    layout: 'centered',\n    badges: ['stable', 'accessible']\n  },\n  argTypes: {\n    variant: {\n      options: ['full', 'icon'],\n      control: { type: 'radio' }\n    },\n    size: {\n      options: ['sm', 'md', 'lg'],\n      control: { type: 'radio' }\n    },\n    className: {\n      control: { type: 'text' }\n    },\n    ariaLabel: {\n      control: { type: 'text' }\n    },\n    isDecorative: {\n      control: { type: 'boolean' }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'full',\n    size: 'md',\n    className: '',\n    ariaLabel: undefined,\n    isDecorative: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-logo ${argsToTemplate(args)}></bb-logo>`\n  })\n}"
        },
        {
          "name": "ResponsiveLayout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <div class=\"md:hidden\">\n          <bb-logo variant=\"icon\" size=\"sm\"></bb-logo>\n        </div>\n        <div class=\"hidden md:block\">\n          <bb-logo variant=\"full\" size=\"md\"></bb-logo>\n        </div>\n      </div>\n    `\n  })\n}"
        }
      ],
      "src/form/select/select.component.stories.ts": [
        {
          "name": "AllFeatures",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Countries',\n    multiple: true,\n    searchable: true,\n    clearable: true,\n    required: true,\n    value: ['br', 'us'],\n    helperText:\n      'A fully-featured select with multiple selection, search, clear functionality, and validation'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### All Features Combined\n\nThis example shows the select component with all features enabled:\n- Multiple selection with tag display\n- Search functionality for filtering\n- Clear button to reset selection\n- Required field validation\n- Comprehensive helper text\n\nPerfect for complex form scenarios where users need maximum flexibility.\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "AllSizes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-4 w-full max-w-md\">\n        <bb-select \n          [options]=\"options\" \n          size=\"sm\" \n          label=\"Small Size\" \n          placeholder=\"Small select\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          size=\"md\" \n          label=\"Medium Size\" \n          placeholder=\"Medium select\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          size=\"lg\" \n          label=\"Large Size\" \n          placeholder=\"Large select\"\n        ></bb-select>\n      </div>\n    `,\n    props: {\n      options: mockOptions\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows the select component in all available sizes (small, medium, large).'\n      }\n    }\n  }\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-6 w-full max-w-md\">\n        <bb-select \n          [options]=\"options\" \n          variant=\"default\" \n          label=\"Default Variant\" \n          placeholder=\"Select an option\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          variant=\"success\" \n          label=\"Success Variant\" \n          value=\"br\"\n          successMessage=\"Selection confirmed successfully\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          variant=\"error\" \n          label=\"Error Variant\" \n          required=\"true\"\n          errorMessage=\"This field is required\"\n        ></bb-select>\n        <bb-select \n          [options]=\"options\" \n          variant=\"warning\" \n          label=\"Warning Variant\" \n          value=\"us\"\n          helperText=\"Please verify your selection\"\n        ></bb-select>\n      </div>\n    `,\n    props: {\n      options: mockOptions\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays all available visual variants of the select component for easy comparison.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    helperText: 'Choose your country from the list'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-select ${argsToTemplate(args)}></bb-select>`\n  })\n}"
        },
        {
          "name": "DisabledState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    disabled: true,\n    value: 'br',\n    helperText: 'This field is currently disabled and cannot be modified'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Disabled state prevents any interaction with the select component.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "EmptyState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Empty Select',\n    options: [],\n    noOptionsText: 'No options available at this time',\n    helperText: 'This select has no options to display'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows how the select behaves when no options are available. Displays a custom \"no options\" message.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ErrorState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Required Field',\n    variant: 'error',\n    required: true,\n    errorMessage: 'Please select a country from the list'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Error state for form validation. Shows error styling and message.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "InFormContext",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <form class=\"space-y-4 w-full max-w-md\">\n        <bb-select \n          [options]=\"countries\" \n          label=\"Country\" \n          required=\"true\"\n          helperText=\"Select your country of residence\"\n        ></bb-select>\n        \n        <bb-select \n          [options]=\"states\" \n          label=\"State/Province\" \n          searchable=\"true\"\n          clearable=\"true\"\n          helperText=\"Search and select your state or province\"\n        ></bb-select>\n        \n        <bb-select \n          [options]=\"priorities\" \n          label=\"Priority Level\" \n          variant=\"warning\"\n          value=\"medium\"\n          helperText=\"Current priority level - change if needed\"\n        ></bb-select>\n      </form>\n    `,\n    props: {\n      countries: mockOptions,\n      states: [\n        { value: 'ca', label: 'California' },\n        { value: 'ny', label: 'New York' },\n        { value: 'tx', label: 'Texas' },\n        { value: 'fl', label: 'Florida' },\n        { value: 'sp', label: 'São Paulo' },\n        { value: 'rj', label: 'Rio de Janeiro' }\n      ],\n      priorities: [\n        { value: 'low', label: 'Low Priority' },\n        { value: 'medium', label: 'Medium Priority' },\n        { value: 'high', label: 'High Priority' },\n        { value: 'urgent', label: 'Urgent' }\n      ]\n    }\n  }),\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        story:\n          'Example of multiple select components working together in a form context with different configurations.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "LoadingState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    loading: true,\n    helperText: 'Loading countries from server...'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows the loading state with a spinner indicator. Use this while fetching options from an API.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<SelectComponent>",
          "defaultValue": "{\n  title: 'Components/Form/Select',\n  component: SelectComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Description\n\nThe Select component provides a dropdown interface for selecting one or multiple options from a list. It supports advanced features like search, clear functionality, and various visual states.\n\n## When to Use\n\n- For choosing options from a predefined list\n- When you need to save space compared to radio buttons\n- For filtering or categorizing data\n- When users need to select multiple items from a list\n\n## Features\n\n- Single and multiple selection modes\n- Searchable options with filtering\n- Keyboard navigation support\n- Loading and disabled states\n- Clear functionality\n- Custom placeholder and helper text\n- Accessibility compliant with ARIA attributes\n\n## Accessibility\n\n- Full keyboard navigation support (Arrow keys, Enter, Escape)\n- Screen reader compatible with proper ARIA attributes\n- Focus management and visual indicators\n- Semantic HTML structure with proper roles\n        `\n      }\n    },\n    a11y: {\n      config: {\n        rules: [{ id: 'color-contrast', enabled: true }]\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      description: 'Visual style variant of the select component',\n      options: ['default', 'success', 'error', 'warning'],\n      control: {\n        type: 'select',\n        labels: {\n          default: '🔵 Default',\n          success: '✅ Success',\n          error: '❌ Error',\n          warning: '⚠️ Warning'\n        }\n      },\n      table: {\n        defaultValue: { summary: 'default' },\n        type: { summary: 'SelectVariant' }\n      }\n    },\n    size: {\n      description: 'Size of the select component',\n      options: ['sm', 'md', 'lg'],\n      control: {\n        type: 'radio',\n        labels: {\n          sm: 'Small',\n          md: 'Medium',\n          lg: 'Large'\n        }\n      },\n      table: {\n        defaultValue: { summary: 'sm' },\n        type: { summary: 'SelectSize' }\n      }\n    },\n    options: {\n      description: 'Array of options to display in the dropdown',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'SelectOption[]' }\n      }\n    },\n    value: {\n      description: 'Currently selected value(s)',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'T | T[] | undefined' }\n      }\n    },\n    multiple: {\n      description: 'Enable multiple selection mode',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    searchable: {\n      description: 'Enable search functionality to filter options',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    clearable: {\n      description: 'Show clear button to reset selection',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    disabled: {\n      description: 'Disable the select component',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    readonly: {\n      description: 'Make the select read-only',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    required: {\n      description: 'Mark the field as required',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    loading: {\n      description: 'Show loading state',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    label: {\n      description: 'Label text for the select field',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    placeholder: {\n      description: 'Placeholder text when no option is selected',\n      control: { type: 'text' },\n      table: {\n        defaultValue: { summary: 'Select an option' },\n        type: { summary: 'string' }\n      }\n    },\n    helperText: {\n      description: 'Helper text displayed below the select',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    errorMessage: {\n      description: 'Error message displayed when variant is error',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    successMessage: {\n      description: 'Success message displayed when variant is success',\n      control: { type: 'text' },\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    // Hide event outputs from controls\n    valueChange: {\n      table: { disable: true }\n    },\n    selectFocus: {\n      table: { disable: true }\n    },\n    selectBlur: {\n      table: { disable: true }\n    },\n    selectKeydown: {\n      table: { disable: true }\n    },\n    searchChange: {\n      table: { disable: true }\n    },\n    optionSelect: {\n      table: { disable: true }\n    },\n    dropdownOpen: {\n      table: { disable: true }\n    },\n    dropdownClose: {\n      table: { disable: true }\n    }\n  },\n  args: {\n    options: mockOptions,\n    placeholder: 'Select a country',\n    variant: 'default',\n    size: 'sm',\n    multiple: false,\n    searchable: false,\n    clearable: false,\n    disabled: false,\n    readonly: false,\n    required: false,\n    loading: false\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "mockOptions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SelectOption[]",
          "defaultValue": "[\n  { value: 'br', label: 'Brazil' },\n  { value: 'us', label: 'United States' },\n  { value: 'ca', label: 'Canada' },\n  { value: 'mx', label: 'Mexico' },\n  { value: 'ar', label: 'Argentina' },\n  { value: 'cl', label: 'Chile' },\n  { value: 'pe', label: 'Peru' },\n  { value: 'co', label: 'Colombia' }\n]"
        },
        {
          "name": "mockOptionsWithDisabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SelectOption[]",
          "defaultValue": "[\n  { value: 'active', label: 'Active' },\n  { value: 'inactive', label: 'Inactive' },\n  { value: 'pending', label: 'Pending', disabled: true },\n  { value: 'suspended', label: 'Suspended' }\n]"
        },
        {
          "name": "MultipleSelection",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Countries',\n    multiple: true,\n    value: ['br', 'us'],\n    clearable: true,\n    helperText: 'You can select multiple countries. Selected items appear as tags.'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Multiple Selection\n\nEnables selection of multiple options. Selected items are displayed as removable tags.\n\n\\`\\`\\`html\n<bb-select \n  [options]=\"countries\" \n  [multiple]=\"true\" \n  [value]=\"['br', 'us']\"\n  [clearable]=\"true\"\n  label=\"Countries\">\n</bb-select>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Interactive Select',\n    helperText: 'Try different configurations using the controls below',\n    variant: 'default',\n    size: 'sm',\n    multiple: false,\n    searchable: false,\n    clearable: false,\n    disabled: false,\n    readonly: false,\n    required: false,\n    loading: false,\n    placeholder: 'Select an option',\n    options: mockOptions\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-select ${argsToTemplate(args)}></bb-select>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Interactive playground to experiment with all select component properties. Use the controls panel to test different configurations.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ReadonlyState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    readonly: true,\n    value: 'br',\n    helperText: 'This field is readonly - value can be seen but not changed'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Readonly state displays the current value but prevents changes.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "SearchableSelect",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    searchable: true,\n    clearable: true,\n    searchPlaceholder: 'Type to search countries...',\n    helperText: 'Start typing to filter options dynamically'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Searchable select allows users to filter options by typing. Perfect for large lists of options.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "SuccessState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Selection',\n    variant: 'success',\n    value: 'br',\n    successMessage: 'Great choice! Brazil selected successfully'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Success state provides positive feedback after a valid selection.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "WarningState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    variant: 'warning',\n    value: 'us',\n    helperText: 'Please verify your selection before proceeding'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Warning state draws attention to selections that may need verification.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithDisabledOptions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Status',\n    options: mockOptionsWithDisabled,\n    helperText: 'Some options are disabled and cannot be selected'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstrates how disabled options appear in the dropdown. They are visually distinct and not selectable.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithValue",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Country',\n    value: 'br',\n    helperText: 'Brazil is pre-selected',\n    clearable: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Shows a select with a pre-selected value. Notice the clear button appears when clearable is enabled.'\n      }\n    }\n  }\n}"
        }
      ],
      "src/ui/popover/popover.component.stories.ts": [
        {
          "name": "AllPositions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"grid grid-cols-4 gap-4 p-4\">\n        <bb-popover position=\"top\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-blue text-white rounded text-sm\">Top</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Acima</div>\n        </bb-popover>\n        \n        <bb-popover position=\"bottom\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-green text-white rounded text-sm\">Bottom</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Abaixo</div>\n        </bb-popover>\n        \n        <bb-popover position=\"left\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-orange text-white rounded text-sm\">Left</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Esquerda</div>\n        </bb-popover>\n        \n        <bb-popover position=\"right\">\n          <button slot=\"trigger\" class=\"px-3 py-2 bg-bytebank-red text-white rounded text-sm\">Right</button>\n          <div slot=\"content\" class=\"p-3 text-sm\">Direita</div>\n        </bb-popover>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra todas as posições básicas disponíveis para o popover.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    position: 'bottom-start',\n    disabled: false,\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    offset: 8\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 bg-bytebank-blue text-white rounded-lg hover:bg-bytebank-blue/90\">\n          Click me\n        </button>\n        <div slot=\"content\" class=\"p-4\">\n          <p class=\"text-sm text-gray-700\">Conteúdo do popover</p>\n        </div>\n      </bb-popover>\n    `\n  })\n}"
        },
        {
          "name": "DisabledState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    disabled: true,\n    position: 'bottom-start'\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 bg-gray-400 text-white rounded cursor-not-allowed\">\n          Desabilitado\n        </button>\n        <div slot=\"content\" class=\"p-4\">\n          <p class=\"text-sm text-gray-700\">Este conteúdo não deve aparecer.</p>\n        </div>\n      </bb-popover>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra o comportamento quando o popover está desabilitado.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "MenuExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    position: 'bottom-start',\n    closeOnClickOutside: true,\n    closeOnEscape: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\">\n          Menu\n        </button>\n        <div slot=\"content\" class=\"py-2 min-w-[120px]\">\n          <button class=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n            Editar\n          </button>\n          <button class=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n            Compartilhar\n          </button>\n          <hr class=\"my-1\">\n          <button class=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\">\n            Excluir\n          </button>\n        </div>\n      </bb-popover>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Exemplo de uso como menu de ações contextuais.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<PopoverComponent>",
          "defaultValue": "{\n  title: 'Components/UI/Popover',\n  component: PopoverComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO componente Popover fornece uma sobreposição contextual que aparece próxima a um elemento de gatilho. É útil para exibir informações adicionais, menus ou controles.\n\n## Quando Usar\n\n- Para menus de contexto e dropdowns\n- Para exibir informações adicionais sobre um elemento\n- Para tooltips complexos com conteúdo interativo\n\n## Acessibilidade\n\n- Suporta navegação por teclado (Enter/Space para abrir, Escape para fechar)\n- Implementa foco adequado no conteúdo do popover\n- Permite fechamento ao clicar fora (configurável)\n        `\n      }\n    }\n  },\n  argTypes: {\n    position: {\n      description: 'Define a posição do popover em relação ao elemento trigger',\n      options: [\n        'top',\n        'bottom',\n        'left',\n        'right',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end'\n      ] as PopoverPosition[],\n      control: { type: 'select' },\n      table: {\n        defaultValue: { summary: 'bottom-start' }\n      }\n    },\n    disabled: {\n      description: 'Desabilita a abertura do popover',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' }\n      }\n    },\n    closeOnClickOutside: {\n      description: 'Determina se o popover deve fechar ao clicar fora dele',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'true' }\n      }\n    },\n    closeOnEscape: {\n      description: 'Determina se o popover deve fechar ao pressionar Escape',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'true' }\n      }\n    },\n    offset: {\n      description: 'Distância em pixels entre o trigger e o popover',\n      control: { type: 'number', min: 0, max: 50, step: 1 },\n      table: {\n        defaultValue: { summary: '8' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    position: 'bottom-start',\n    disabled: false,\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    offset: 8\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <bb-popover ${argsToTemplate(args)}>\n        <button slot=\"trigger\" class=\"px-4 py-2 bg-bytebank-blue text-white rounded-lg hover:bg-bytebank-blue/90\">\n          Playground\n        </button>\n        <div slot=\"content\" class=\"p-4 min-w-[200px]\">\n          <h3 class=\"text-sm font-medium text-gray-900 mb-2\">Configurações</h3>\n          <p class=\"text-xs text-gray-600\">Use os controles para experimentar diferentes opções.</p>\n        </div>\n      </bb-popover>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Use os controles abaixo para experimentar diferentes configurações do popover.'\n      }\n    }\n  }\n}"
        }
      ],
      "src/ui/button/button.component.stories.ts": [
        {
          "name": "AllSizes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button size=\"sm\" variant=\"blue\">Small</bb-button>\n        <bb-button size=\"md\" variant=\"blue\">Medium</bb-button>\n        <bb-button size=\"lg\" variant=\"blue\">Large</bb-button>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap; gap: 1rem; align-items: center;\">\n        <bb-button variant=\"dark\">Dark</bb-button>\n        <bb-button variant=\"blue\">Blue</bb-button>\n        <bb-button variant=\"green\">Green</bb-button>\n        <bb-button variant=\"orange\">Orange</bb-button>\n        <bb-button variant=\"outlineGreen\">Outline Green</bb-button>\n        <bb-button variant=\"outlineOrange\">Outline Orange</bb-button>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Disabled Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Loading",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: true,\n    disabled: false,\n    loadingText: 'Carregando, aguarde...'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Loading Button</bb-button>`\n  })\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonComponent>",
          "defaultValue": "{\n  title: 'Components/UI/Button',\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Um componente de botão flexível com múltiplas variantes, tamanhos e estados, seguindo as diretrizes de acessibilidade.'\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'dark',\n        'blue',\n        'green',\n        'orange',\n        'outlineGreen',\n        'outlineOrange'\n      ] as ButtonVariant[],\n      description: 'Variante visual do botão'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'] as ButtonSize[],\n      description: 'Tamanho do botão'\n    },\n    type: {\n      control: 'select',\n      options: ['button', 'submit', 'reset'],\n      description: 'Tipo HTML do botão'\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Estado de carregamento do botão'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Se o botão está desabilitado'\n    },\n    className: {\n      control: 'text',\n      description: 'Classes CSS adicionais'\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Label acessível do botão'\n    },\n    ariaDescribedBy: {\n      control: 'text',\n      description: 'ID do elemento que descreve o botão'\n    },\n    ariaPressed: {\n      control: 'boolean',\n      description: 'Estado pressionado para botões toggle'\n    },\n    role: {\n      control: 'text',\n      description: 'Role ARIA customizado'\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Texto para leitores de tela durante carregamento'\n    },\n    buttonClick: {\n      action: 'clicked',\n      description: 'Evento emitido quando o botão é clicado'\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "OutlineGreen",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'outlineGreen',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Green</bb-button>`\n  })\n}"
        },
        {
          "name": "OutlineOrange",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'outlineOrange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Outline Orange</bb-button>`\n  })\n}"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Primary Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'dark',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Secondary Button</bb-button>`\n  })\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'green',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Success Button</bb-button>`\n  })\n}"
        },
        {
          "name": "ToggleButton",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaPressed: false,\n    ariaLabel: 'Toggle notifications'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>🔔 Notifications</bb-button>`\n  })\n}"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'orange',\n    type: 'button',\n    loading: false,\n    disabled: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-button ${argsToTemplate(args)}>Warning Button</bb-button>`\n  })\n}"
        },
        {
          "name": "WithAccessibility",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'blue',\n    ariaLabel: 'Save document',\n    ariaDescribedBy: 'save-help-text'\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div>\n        <bb-button ${argsToTemplate(args)}>Save</bb-button>\n        <p id=\"save-help-text\" style=\"margin-top: 0.5rem; font-size: 0.875rem; color: #6b7280;\">\n          This will save your current document to the cloud\n        </p>\n      </div>\n    `\n  })\n}"
        }
      ],
      "src/table/generic-table/generic-table.component.stories.ts": [
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-8\">\n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Com Paginação (5 itens por página)</h3>\n          <bb-generic-table \n            [data]=\"data\" \n            [columns]=\"columns\" \n            [pageSize]=\"5\">\n          </bb-generic-table>\n        </div>\n        \n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Sem Paginação</h3>\n          <bb-generic-table \n            [data]=\"smallData\" \n            [columns]=\"columns\">\n          </bb-generic-table>\n        </div>\n        \n        <div>\n          <h3 class=\"text-lg font-medium mb-4\">Estado Vazio</h3>\n          <bb-generic-table \n            [data]=\"[]\" \n            [columns]=\"columns\" \n            [pageSize]=\"10\">\n          </bb-generic-table>\n        </div>\n      </div>\n    `,\n    props: {\n      data: sampleData,\n      smallData: sampleData.slice(0, 3),\n      columns: sampleColumns\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra todas as variações visuais do componente GenericTable lado a lado.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  })\n}"
        },
        {
          "name": "EmptyState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: [],\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstra como a tabela se comporta quando não há dados para exibir.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "LargeDataset",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: Array.from({ length: 100 }, (_, i) => ({\n      id: i + 1,\n      name: `User ${i + 1}`,\n      email: `user${i + 1}@example.com`,\n      status: i % 3 === 0 ? 'inactive' : ('active' as 'active' | 'inactive'),\n      amount: Math.floor(Math.random() * 5000) + 500\n    })),\n    columns: sampleColumns,\n    pageSize: 10\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Demonstra o comportamento da tabela com um grande volume de dados (100 registros) e paginação.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<GenericTableComponent<SampleData>>",
          "defaultValue": "{\n  title: 'Components/Table/GenericTable',\n  component: GenericTableComponent,\n  parameters: {\n    layout: 'padded',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO GenericTable é um componente de tabela reutilizável que permite exibir dados tabulares de forma organizada e flexível. Suporta colunas customizáveis, paginação opcional e estados de carregamento.\n\n## Quando Usar\n\n- Para exibir listas de dados estruturados\n- Quando precisar de paginação para grandes volumes de dados\n- Para criar interfaces de administração e dashboards\n- Em relatórios e visualizações de dados\n\n## Acessibilidade\n\n- Suporta navegação por teclado\n- Implementa semântica apropriada com elementos table\n- Compatível com leitores de tela\n- Mantém foco visível durante navegação\n        `\n      }\n    }\n  },\n  argTypes: {\n    data: {\n      description: 'Array of data objects to display in the table',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'T[]' },\n        defaultValue: { summary: '[]' }\n      }\n    },\n    columns: {\n      description: 'Array of column definitions with label and accessor properties',\n      control: { type: 'object' },\n      table: {\n        type: { summary: 'TableColumn<T>[]' }\n      }\n    },\n    pageSize: {\n      description: 'Number of items per page (undefined disables pagination)',\n      control: { type: 'number' },\n      table: {\n        type: { summary: 'number | undefined' },\n        defaultValue: { summary: 'undefined' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 5\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Use os controles abaixo para experimentar diferentes configurações do componente.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "ResponsiveLayout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: sampleData.slice(0, 5),\n    columns: sampleColumns,\n    pageSize: undefined\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"w-full\">\n        <bb-generic-table ${argsToTemplate(args)}></bb-generic-table>\n      </div>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1'\n    },\n    docs: {\n      description: {\n        story:\n          'Visualiza como a tabela se adapta em diferentes tamanhos de tela. Use o controle de viewport para testar.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "sampleColumns",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TableColumn[]",
          "defaultValue": "[\n  { label: 'ID', accessor: 'id' },\n  { label: 'Name', accessor: 'name' },\n  { label: 'Email', accessor: 'email' },\n  { label: 'Status', accessor: 'status' },\n  { label: 'Amount', accessor: 'amount' }\n]"
        },
        {
          "name": "sampleData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SampleData[]",
          "defaultValue": "[\n  { id: 1, name: 'John Doe', email: 'john@example.com', status: 'active', amount: 1500 },\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com', status: 'inactive', amount: 2300 },\n  { id: 3, name: 'Bob Johnson', email: 'bob@example.com', status: 'active', amount: 1200 },\n  { id: 4, name: 'Alice Brown', email: 'alice@example.com', status: 'active', amount: 3400 },\n  { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', status: 'inactive', amount: 890 },\n  { id: 6, name: 'David Miller', email: 'david@example.com', status: 'active', amount: 2100 },\n  { id: 7, name: 'Eva Garcia', email: 'eva@example.com', status: 'inactive', amount: 1750 },\n  { id: 8, name: 'Frank Davis', email: 'frank@example.com', status: 'active', amount: 2800 },\n  { id: 9, name: 'Grace Lee', email: 'grace@example.com', status: 'active', amount: 3200 },\n  { id: 10, name: 'Henry Taylor', email: 'henry@example.com', status: 'inactive', amount: 1950 },\n  { id: 11, name: 'Isabel Martinez', email: 'isabel@example.com', status: 'active', amount: 2650 },\n  { id: 12, name: 'Jack Anderson', email: 'jack@example.com', status: 'active', amount: 1400 }\n]"
        },
        {
          "name": "WithCustomRender",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div>\n        <ng-template #statusTemplate let-value let-row=\"row\">\n          <span class=\"px-2 py-1 rounded-full text-xs\" \n                [ngClass]=\"{\n                  'bg-green-100 text-green-800': value === 'active',\n                  'bg-red-100 text-red-800': value === 'inactive'\n                }\">\n            {{ value === 'active' ? '✓ Ativo' : '✗ Inativo' }}\n          </span>\n        </ng-template>\n\n        <bb-generic-table \n          [data]=\"customData\" \n          [columns]=\"getCustomColumns(statusTemplate)\">\n        </bb-generic-table>\n      </div>\n    `,\n    props: {\n      customData: [\n        { id: 1, name: 'John Doe', email: 'john@example.com', status: 'active' },\n        { id: 2, name: 'Jane Smith', email: 'jane@example.com', status: 'inactive' },\n        { id: 3, name: 'Bob Johnson', email: 'bob@example.com', status: 'active' },\n        { id: 4, name: 'Alice Brown', email: 'alice@example.com', status: 'active' },\n        { id: 5, name: 'Charlie Wilson', email: 'charlie@example.com', status: 'inactive' }\n      ],\n      getCustomColumns: (statusTemplate: any) => [\n        { label: 'ID', accessor: 'id' },\n        { label: 'Name', accessor: 'name' },\n        { label: 'Email', accessor: 'email' },\n        { label: 'Status', accessor: 'status', render: statusTemplate }\n      ]\n    }\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela com Renderização Customizada\n\nEsta story demonstra como usar a propriedade \\`render\\` das colunas com templates Angular para customizar a exibição dos dados:\n\n- **Status**: Exibe badges coloridos com ícones para status ativo/inativo\n\\`\\`\\`\n<!-- Uso na tabela -->\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"[{ label: 'Status', accessor: 'status', render: statusTemplate }]\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithoutPagination",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: sampleData.slice(0, 5),\n    columns: sampleColumns,\n    pageSize: undefined\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela sem Paginação\n\nQuando \\`pageSize\\` é undefined, a paginação é desabilitada e todos os dados são exibidos de uma vez.\n\n\\`\\`\\`html\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"columns\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithPagination",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    data: sampleData,\n    columns: sampleColumns,\n    pageSize: 3\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-generic-table ${argsToTemplate(args)}></bb-generic-table>`\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Tabela com Paginação\n\nEsta story demonstra o uso da tabela com paginação habilitada, útil para grandes volumes de dados.\n\n\\`\\`\\`html\n<bb-generic-table \n  [data]=\"data\" \n  [columns]=\"columns\" \n  [pageSize]=\"3\">\n</bb-generic-table>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        }
      ],
      "src/ui/img/img.component.stories.ts": [
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-6\">\n        <div>\n          <h3 class=\"text-lg font-semibold mb-2\">All Sizes</h3>\n          <div class=\"flex gap-4 items-center flex-wrap\">\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra small\" size=\"xs\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Small\" size=\"sm\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Medium\" size=\"md\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Large\" size=\"lg\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra large\" size=\"xl\"></bb-img>\n          </div>\n        </div>\n        <div>\n          <h3 class=\"text-lg font-semibold mb-2\">With Custom Classes</h3>\n          <div class=\"flex gap-4 items-center flex-wrap\">\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Rounded\" size=\"md\" className=\"rounded-full\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Shadow\" size=\"md\" className=\"shadow-lg\"></bb-img>\n            <bb-img src=\"https://picsum.photos/100/100\" alt=\"Border\" size=\"md\" className=\"border-4 border-blue-500\"></bb-img>\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    layout: 'padded'\n  }\n}"
        },
        {
          "name": "Decorative",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/200/200',\n    size: 'md',\n    isDecorative: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: \"Decorative images are hidden from screen readers and don't require alt text.\"\n      }\n    }\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/200/200',\n    alt: 'A beautiful placeholder image',\n    size: 'md'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-img ${argsToTemplate(args)}></bb-img>`\n  })\n}"
        },
        {
          "name": "ErrorState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://invalid-url-that-will-fail.com/image.jpg',\n    alt: 'This image will fail to load',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'When an image fails to load, an error state with an icon is displayed.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "FullWidth",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/800/400',\n    alt: 'Full width image',\n    size: 'full'\n  },\n  parameters: {\n    layout: 'padded'\n  }\n}"
        },
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/400/400',\n    alt: 'Large image',\n    size: 'lg'\n  }\n}"
        },
        {
          "name": "LoadingState",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://httpbin.org/delay/3',\n    alt: 'This image will take time to load',\n    size: 'md'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'While loading, a spinner icon is displayed.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ImgComponent>",
          "defaultValue": "{\n  title: 'Components/UI/Img',\n  component: ImgComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\nThe \\`bb-img\\` component is a flexible image component that can handle both internal assets through the shared assets system and external URLs. It supports SVG and standard image formats with loading states, error handling, and accessibility features.\n\n## Features\n- Support for internal assets via \\`getAssetContent\\`\n- External URL support\n- SVG and standard image format handling\n- Loading and error states\n- Configurable sizes\n- Accessibility compliant\n- Custom CSS classes support\n        `\n      }\n    }\n  },\n  argTypes: {\n    src: {\n      control: 'text',\n      description: 'The source path or URL of the image',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    alt: {\n      control: 'text',\n      description: 'Alternative text for the image',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    size: {\n      control: 'select',\n      options: ['xs', 'sm', 'md', 'lg', 'xl', 'full'],\n      description: 'The size of the image',\n      table: {\n        defaultValue: { summary: 'md' },\n        type: { summary: 'ImageSize' }\n      }\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    isDecorative: {\n      control: 'boolean',\n      description: 'Whether the image is decorative (hidden from screen readers)',\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    loadingText: {\n      control: 'text',\n      description: 'Custom loading text for screen readers',\n      table: {\n        defaultValue: { summary: 'Carregando imagem...' },\n        type: { summary: 'string' }\n      }\n    },\n    errorText: {\n      control: 'text',\n      description: 'Custom error text for screen readers',\n      table: {\n        defaultValue: { summary: 'Erro ao carregar imagem' },\n        type: { summary: 'string' }\n      }\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/200/200',\n    alt: 'Interactive playground image',\n    size: 'md',\n    className: '',\n    isDecorative: false,\n    loadingText: 'Carregando imagem...',\n    errorText: 'Erro ao carregar imagem'\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-img ${argsToTemplate(args)}></bb-img>`\n  })\n}"
        },
        {
          "name": "SizeComparison",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 16px; align-items: center; flex-wrap: wrap;\">\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra small\" size=\"xs\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Small\" size=\"sm\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Medium\" size=\"md\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Large\" size=\"lg\"></bb-img>\n        <bb-img src=\"https://picsum.photos/100/100\" alt=\"Extra large\" size=\"xl\"></bb-img>\n      </div>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Comparison of all available sizes: xs, sm, md, lg, xl.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/100/100',\n    alt: 'Small image',\n    size: 'sm'\n  }\n}"
        },
        {
          "name": "WithCustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    src: 'https://picsum.photos/300/300',\n    alt: 'Image with custom styling',\n    size: 'md',\n    className: 'rounded-full shadow-lg'\n  }\n}"
        }
      ],
      "src/ui/toast/toast.component.stories.ts": [
        {
          "name": "AllVariants",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex flex-col gap-4 items-end p-8 w-full h-screen relative\">\n        <bb-toast message=\"Mensagem de Sucesso!\" variant=\"success\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Erro!\" variant=\"error\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n        <bb-toast message=\"Mensagem de Informação!\" variant=\"info\" [show]=\"true\" [duration]=\"0\"></bb-toast>\n      </div>\n    `\n  }),\n  parameters: {\n    // Override default layout for this specific story to display all toasts\n    layout: 'padded'\n  }\n}"
        },
        {
          "name": "AutoClosing",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Este toast fechará em 3 segundos.',\n    variant: 'success',\n    duration: 3000\n  }\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    message: 'Esta é uma notificação padrão.',\n    variant: 'info',\n    show: true,\n    duration: 0\n  },\n  render: (args) => ({\n    props: args,\n    template: `<bb-toast ${argsToTemplate(args)}></bb-toast>`\n  })\n}"
        },
        {
          "name": "Error",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Ocorreu um erro ao processar a solicitação.',\n    variant: 'error'\n  }\n}"
        },
        {
          "name": "Info",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Informação importante para o usuário.',\n    variant: 'info'\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ToastComponent>",
          "defaultValue": "{\n  title: 'Components/UI/Toast', //\n  component: ToastComponent, //\n  parameters: {\n    layout: 'fullscreen', // Toast is positioned, so fullscreen might be better for context\n    docs: {\n      description: {\n        component:\n          'Um componente de notificação que exibe mensagens temporárias ao usuário, com suporte a diferentes tipos de variantes (sucesso, erro, informação) e fechamento automático ou manual.' //\n      }\n    }\n  },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `\n      <div style=\"position: relative; height: 150px;\">\n      ${story}\n      </div>`\n    )\n  ],\n  argTypes: {\n    message: {\n      control: 'text',\n      description: 'A mensagem a ser exibida no toast.',\n      defaultValue: 'Esta é uma mensagem de notificação.'\n    },\n    variant: {\n      control: 'select',\n      options: ['success', 'error', 'info'],\n      description: 'Define a variação visual do toast.',\n      defaultValue: 'info'\n    },\n    show: {\n      control: 'boolean',\n      description: 'Controla a visibilidade do toast.',\n      defaultValue: true\n    },\n    duration: {\n      control: 'number',\n      description:\n        'Duração em milissegundos para o toast fechar automaticamente. 0 para não fechar.',\n      defaultValue: 0\n    },\n    toastClose: {\n      action: 'toastClosed',\n      description: 'Evento emitido quando o toast é fechado.'\n    }\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    message: 'Mensagem customizável do Toast.',\n    variant: 'info',\n    show: true,\n    duration: 5000\n  }\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'Operação realizada com sucesso!',\n    variant: 'success',\n    duration: 0\n  }\n}"
        }
      ],
      "src/form/input/input.component.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    placeholder: 'Digite seu nome'\n  }\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Campo desabilitado',\n    placeholder: 'Este campo está desabilitado',\n    disabled: true,\n    value: 'Valor desabilitado'\n  }\n}"
        },
        {
          "name": "Email",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'email',\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    prefixIcon: Mail\n  }\n}"
        },
        {
          "name": "Error",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'error',\n    label: 'Campo com erro',\n    value: 'dados-incorretos',\n    errorMessage: 'Por favor, verifique os dados informados.'\n  }\n}"
        },
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'lg',\n    label: 'Tamanho grande',\n    placeholder: 'Input grande'\n  }\n}"
        },
        {
          "name": "LoginForm",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-4 w-80\">\n        <bb-input\n          label=\"Email\"\n          type=\"email\"\n          placeholder=\"seu@email.com\"\n          prefixIcon=\"mail\"\n          required=\"true\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Senha\"\n          type=\"password\"\n          placeholder=\"Digite sua senha\"\n          showPasswordToggle=\"true\"\n          required=\"true\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Medium",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'md',\n    label: 'Tamanho médio',\n    placeholder: 'Input médio (padrão)'\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<InputComponent>",
          "defaultValue": "{\n  title: 'Components/Form/Input',\n  component: InputComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A versatile input component with support for different variants, sizes, icons, and accessibility features.'\n      }\n    }\n  },\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['text', 'password', 'email', 'number', 'tel', 'url', 'search'],\n      description: 'The input type'\n    },\n    variant: {\n      control: 'select',\n      options: ['default', 'success', 'error', 'warning'],\n      description: 'Visual variant of the input'\n    },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg'],\n      description: 'Size of the input'\n    },\n    placeholder: {\n      control: 'text',\n      description: 'Placeholder text'\n    },\n    value: {\n      control: 'text',\n      description: 'Input value'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the input is disabled'\n    },\n    readonly: {\n      control: 'boolean',\n      description: 'Whether the input is readonly'\n    },\n    required: {\n      control: 'boolean',\n      description: 'Whether the input is required'\n    },\n    label: {\n      control: 'text',\n      description: 'Label text'\n    },\n    helperText: {\n      control: 'text',\n      description: 'Helper text below the input'\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Error message (shown when variant is error)'\n    },\n    successMessage: {\n      control: 'text',\n      description: 'Success message (shown when variant is success)'\n    },\n    showPasswordToggle: {\n      control: 'boolean',\n      description: 'Show password toggle button (for password inputs)'\n    },\n    prefixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the start'\n    },\n    suffixIcon: {\n      control: 'object',\n      description: 'LucideIconData object for icon to show at the end'\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes'\n    }\n  },\n  args: {\n    type: 'text',\n    variant: 'default',\n    size: 'md',\n    placeholder: 'Digite algo...',\n    value: '',\n    disabled: false,\n    readonly: false,\n    required: false,\n    showPasswordToggle: false\n  },\n  tags: ['autodocs']\n}"
        },
        {
          "name": "Number",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'number',\n    label: 'Idade',\n    placeholder: '25'\n  }\n}"
        },
        {
          "name": "Password",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'password',\n    label: 'Senha',\n    placeholder: 'Digite sua senha',\n    showPasswordToggle: true,\n    helperText: 'A senha deve ter pelo menos 8 caracteres'\n  }\n}"
        },
        {
          "name": "Readonly",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Campo somente leitura',\n    readonly: true,\n    value: 'Este valor não pode ser editado'\n  }\n}"
        },
        {
          "name": "Required",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Campo obrigatório',\n    placeholder: 'Este campo é obrigatório',\n    required: true,\n    helperText: 'Este campo deve ser preenchido'\n  }\n}"
        },
        {
          "name": "Search",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'search',\n    placeholder: 'Buscar...',\n    prefixIcon: SearchIcon\n  }\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'sm',\n    label: 'Tamanho pequeno',\n    placeholder: 'Input pequeno'\n  }\n}"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'success',\n    label: 'Campo válido',\n    value: 'Dados corretos',\n    successMessage: 'Perfeito! Os dados estão corretos.'\n  }\n}"
        },
        {
          "name": "ValidationStates",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"space-y-6 w-80\">\n        <bb-input\n          label=\"Campo válido\"\n          variant=\"success\"\n          value=\"dados@corretos.com\"\n          successMessage=\"Email válido!\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com erro\"\n          variant=\"error\"\n          value=\"email-inválido\"\n          errorMessage=\"Por favor, insira um email válido.\">\n        </bb-input>\n        \n        <bb-input\n          label=\"Campo com aviso\"\n          variant=\"warning\"\n          value=\"exemplo@teste.com\"\n          helperText=\"Certifique-se de que este email está correto.\">\n        </bb-input>\n      </div>\n    `\n  })\n}"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    variant: 'warning',\n    label: 'Campo com aviso',\n    value: 'dados-atenção',\n    helperText: 'Atenção: verifique se os dados estão corretos.'\n  }\n}"
        },
        {
          "name": "WithHelperText",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Email',\n    placeholder: 'seu@email.com',\n    helperText: 'Utilizaremos este email para entrar em contato'\n  }\n}"
        },
        {
          "name": "WithLabel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Nome completo',\n    placeholder: 'Digite seu nome completo'\n  }\n}"
        },
        {
          "name": "WithPrefixIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Usuário',\n    placeholder: 'Digite seu usuário',\n    prefixIcon: UserRoundIcon\n  }\n}"
        },
        {
          "name": "WithSuffixIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Website',\n    placeholder: 'https://exemplo.com',\n    suffixIcon: Link\n  }\n}"
        }
      ],
      "src/table/paginator/paginator.component.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/paginator/paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    currentPage: 1,\n    totalPages: 10\n  }\n}"
        },
        {
          "name": "FewPages",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/paginator/paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    currentPage: 2,\n    totalPages: 5\n  }\n}"
        },
        {
          "name": "LastPage",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/paginator/paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    currentPage: 10,\n    totalPages: 10\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/paginator/paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<PaginatorComponent>",
          "defaultValue": "{\n  title: 'Components/Table/Paginator',\n  component: PaginatorComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Paginator component for navigating through pages of content. Displays page numbers with ellipses for large page counts and navigation arrows.'\n      }\n    }\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    currentPage: {\n      control: { type: 'number', min: 1 },\n      description: 'The current active page number'\n    },\n    totalPages: {\n      control: { type: 'number', min: 1 },\n      description: 'The total number of available pages'\n    },\n    onPageChange: {\n      action: 'pageChanged',\n      description: 'Event emitted when the page changes'\n    }\n  }\n}"
        },
        {
          "name": "MiddlePage",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/table/paginator/paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    currentPage: 15,\n    totalPages: 30\n  }\n}"
        }
      ],
      "src/ui/dialog/dialog.component.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Default Dialog',\n    showCloseButton: true,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '32rem',\n    ariaLabel: ''\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          This is a generic dialog component that can contain any content.\n        </p>\n        <div class=\"flex gap-3 justify-end\">\n          <button class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n            Cancel\n          </button>\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Confirm\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  })\n}"
        },
        {
          "name": "LoginForm",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Login to ByteBank',\n    showCloseButton: true,\n    closeOnBackdropClick: false,\n    closeOnEscape: true,\n    maxWidth: '28rem',\n    ariaLabel: 'Login form dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Login dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <form class=\"space-y-4\">\n          <div>\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input \n              id=\"email\"\n              type=\"email\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n          <div>\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input \n              id=\"password\"\n              type=\"password\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter your password\"\n            />\n          </div>\n          <div class=\"flex items-center justify-between pt-4\">\n            <a href=\"#\" class=\"text-sm text-blue-600 hover:text-blue-800\">\n              Forgot password?\n            </a>\n            <div class=\"flex gap-3\">\n              <button type=\"button\" class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n                Cancel\n              </button>\n              <button type=\"submit\" class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n                Login\n              </button>\n            </div>\n          </div>\n        </form>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Login Form Dialog\n\nEsta variante demonstra como usar o Dialog para formulários de autenticação. \nNote que o fechamento por clique no backdrop está desabilitado para evitar perda acidental de dados.\n\n**Características:**\n- Não permite fechamento por clique no backdrop\n- Permite fechamento via Escape\n- Tamanho otimizado para formulários de login\n- Inclui link para recuperação de senha\n\n\\`\\`\\`html\n<bb-dialog \n  [isOpen]=\"isLoginOpen\"\n  title=\"Login to ByteBank\"\n  [closeOnBackdropClick]=\"false\"\n  maxWidth=\"28rem\"\n  (close)=\"handleLoginClose()\"\n>\n  <!-- Form content -->\n</bb-dialog>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<DialogComponent>",
          "defaultValue": "{\n  title: 'Components/UI/Dialog',\n  component: DialogComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## Descrição\n\nO componente Dialog fornece uma interface modal para exibir conteúdo sobreposto, incluindo formulários de login, registro, confirmações e outros conteúdos de overlay. Oferece suporte a blur de fundo, gerenciamento de foco e acessibilidade.\n\n## Quando Usar\n\n- Para formulários de login e registro\n- Para confirmações de ações importantes\n- Para exibir conteúdo que requer atenção imediata do usuário\n- Para modais com conteúdo customizado\n\n## Acessibilidade\n\n- Suporta navegação por teclado (Tab, Escape)\n- Implementa aria-label e aria-labelledby apropriados\n- Gerencia foco automaticamente quando aberto/fechado\n- Suporta fechamento via tecla Escape\n        `\n      }\n    }\n  },\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Controls whether the dialog is visible',\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' }\n      }\n    },\n    title: {\n      control: 'text',\n      description: 'Title displayed in the dialog header',\n      table: {\n        defaultValue: { summary: '\"\"' },\n        type: { summary: 'string' }\n      }\n    },\n    showCloseButton: {\n      control: 'boolean',\n      description: 'Whether to show the close button in the header',\n      table: {\n        defaultValue: { summary: 'true' },\n        type: { summary: 'boolean' }\n      }\n    },\n    closeOnBackdropClick: {\n      control: 'boolean',\n      description: 'Whether clicking the backdrop closes the dialog',\n      table: {\n        defaultValue: { summary: 'true' },\n        type: { summary: 'boolean' }\n      }\n    },\n    closeOnEscape: {\n      control: 'boolean',\n      description: 'Whether pressing escape closes the dialog',\n      table: {\n        defaultValue: { summary: 'true' },\n        type: { summary: 'boolean' }\n      }\n    },\n    maxWidth: {\n      control: 'text',\n      description: 'Maximum width of the dialog container',\n      table: {\n        defaultValue: { summary: '32rem' },\n        type: { summary: 'string' }\n      }\n    },\n    ariaLabel: {\n      control: 'text',\n      description: 'Custom aria-label for the dialog',\n      table: {\n        type: { summary: 'string' }\n      }\n    },\n    close: {\n      action: 'close',\n      description: 'Event emitted when dialog is closed',\n      table: {\n        disable: true\n      }\n    }\n  }\n}"
        },
        {
          "name": "NoBackdropClose",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Cannot Close on Backdrop',\n    showCloseButton: true,\n    closeOnBackdropClick: false,\n    closeOnEscape: false,\n    maxWidth: '24rem',\n    ariaLabel: 'Modal dialog requiring explicit closure'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          This dialog cannot be closed by clicking outside or pressing Escape. You must use the close button.\n        </p>\n        <div class=\"flex justify-end\">\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Close\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Dialog that requires explicit closure via the close button, useful for important forms or confirmations.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "Playground",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Playground Dialog',\n    showCloseButton: true,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '32rem',\n    ariaLabel: ''\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          Use the controls panel to experiment with all dialog properties and see how they affect the component behavior.\n        </p>\n        <div class=\"bg-gray-50 p-4 rounded mb-4\">\n          <h4 class=\"font-medium mb-2\">Current Settings:</h4>\n          <ul class=\"text-sm text-gray-600 space-y-1\">\n            <li>Show Close Button: {{ showCloseButton ? 'Yes' : 'No' }}</li>\n            <li>Close on Backdrop: {{ closeOnBackdropClick ? 'Yes' : 'No' }}</li>\n            <li>Close on Escape: {{ closeOnEscape ? 'Yes' : 'No' }}</li>\n            <li>Max Width: {{ maxWidth }}</li>\n          </ul>\n        </div>\n        <div class=\"flex gap-3 justify-end\">\n          <button class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n            Cancel\n          </button>\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Apply\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  })\n}"
        },
        {
          "name": "RegisterForm",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Create Account',\n    showCloseButton: true,\n    closeOnBackdropClick: false,\n    closeOnEscape: true,\n    maxWidth: '32rem',\n    ariaLabel: 'Registration form dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Registration dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <form class=\"space-y-4\">\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                First Name\n              </label>\n              <input \n                id=\"firstName\"\n                type=\"text\" \n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"John\"\n              />\n            </div>\n            <div>\n              <label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                Last Name\n              </label>\n              <input \n                id=\"lastName\"\n                type=\"text\" \n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Doe\"\n              />\n            </div>\n          </div>\n          <div>\n            <label for=\"regEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input \n              id=\"regEmail\"\n              type=\"email\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"john.doe@example.com\"\n            />\n          </div>\n          <div>\n            <label for=\"regPassword\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input \n              id=\"regPassword\"\n              type=\"password\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Create a strong password\"\n            />\n          </div>\n          <div>\n            <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Confirm Password\n            </label>\n            <input \n              id=\"confirmPassword\"\n              type=\"password\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Confirm your password\"\n            />\n          </div>\n          <div class=\"flex items-center justify-end gap-3 pt-4\">\n            <button type=\"button\" class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"px-4 py-2 bg-green-600 text-white hover:bg-green-700 rounded\">\n              Create Account\n            </button>\n          </div>\n        </form>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Registration Form Dialog\n\nDemonstra o uso do Dialog para formulários de registro com múltiplos campos.\nUtiliza um layout responsivo em grade para otimizar o espaço.\n\n**Características:**\n- Layout em grade para campos de nome\n- Validação visual via focus rings\n- Tamanho maior para acomodar mais campos\n- Botão de ação diferenciado (verde para registro)\n\n\\`\\`\\`html\n<bb-dialog \n  [isOpen]=\"isRegisterOpen\"\n  title=\"Create Account\"\n  [closeOnBackdropClick]=\"false\"\n  maxWidth=\"32rem\"\n  (close)=\"handleRegisterClose()\"\n>\n  <!-- Registration form content -->\n</bb-dialog>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithoutCloseButton",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: 'Dialog Without Close Button',\n    showCloseButton: false,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '28rem',\n    ariaLabel: 'Important notification dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <p class=\"text-gray-600 mb-4\">\n          This dialog doesn't show a close button. It can only be closed by clicking outside or pressing Escape.\n        </p>\n        <div class=\"flex gap-3 justify-end\">\n          <button class=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded\">\n            Acknowledge\n          </button>\n        </div>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story:\n          'Dialog variant without the close button, useful for critical notifications that require user acknowledgment.'\n      }\n    }\n  }\n}"
        },
        {
          "name": "WithoutTitle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    isOpen: true,\n    title: '',\n    showCloseButton: true,\n    closeOnBackdropClick: true,\n    closeOnEscape: true,\n    maxWidth: '24rem',\n    ariaLabel: 'Confirmation dialog'\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      dialogOpen: signal(args.isOpen),\n      handleClose: () => {\n        console.log('Confirmation dialog closed');\n      }\n    },\n    template: `\n      <bb-dialog \n        [isOpen]=\"dialogOpen()\"\n        [title]=\"title\"\n        [showCloseButton]=\"showCloseButton\"\n        [closeOnBackdropClick]=\"closeOnBackdropClick\"\n        [closeOnEscape]=\"closeOnEscape\"\n        [maxWidth]=\"maxWidth\"\n        [ariaLabel]=\"ariaLabel\"\n        (close)=\"handleClose()\"\n      >\n        <div class=\"text-center\">\n          <div class=\"w-12 h-12 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center\">\n            <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n          </div>\n          <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Delete Account</h3>\n          <p class=\"text-gray-600 mb-6\">\n            Are you sure you want to delete your account? This action cannot be undone.\n          </p>\n          <div class=\"flex gap-3 justify-center\">\n            <button class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded\">\n              Cancel\n            </button>\n            <button class=\"px-4 py-2 bg-red-600 text-white hover:bg-red-700 rounded\">\n              Delete\n            </button>\n          </div>\n        </div>\n      </bb-dialog>\n    `\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n### Dialog Without Header Title\n\nDemonstra um dialog sem título no cabeçalho, útil para confirmações visuais onde o conteúdo é auto-explicativo.\n\n**Características:**\n- Sem título no cabeçalho\n- Conteúdo centralizado\n- Ícone visual para comunicação rápida\n- aria-label obrigatório para acessibilidade\n\n\\`\\`\\`html\n<bb-dialog \n  [isOpen]=\"isDeleteOpen\"\n  title=\"\"\n  ariaLabel=\"Delete confirmation dialog\"\n  maxWidth=\"24rem\"\n  (close)=\"handleDeleteClose()\"\n>\n  <!-- Centered confirmation content -->\n</bb-dialog>\n\\`\\`\\`\n        `\n      }\n    }\n  }\n}"
        }
      ],
      ".storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": ".storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  }\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "src/form/checkbox/checkbox.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<CheckboxComponent>",
          "file": "src/form/checkbox/checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/form/input/input.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<InputComponent>",
          "file": "src/form/input/input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/form/select/select.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<SelectComponent>",
          "file": "src/form/select/select.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/table/paginator/paginator.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<PaginatorComponent>",
          "file": "src/table/paginator/paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/table/generic-table/generic-table.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<GenericTableComponent<SampleData>>",
          "file": "src/table/generic-table/generic-table.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/ui/button/button.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ButtonComponent>",
          "file": "src/ui/button/button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/ui/dialog/dialog.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<DialogComponent>",
          "file": "src/ui/dialog/dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/ui/img/img.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ImgComponent>",
          "file": "src/ui/img/img.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/ui/logo/logo.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<LogoComponent>",
          "file": "src/ui/logo/logo.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/ui/popover/popover.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<PopoverComponent>",
          "file": "src/ui/popover/popover.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/ui/toast/toast.component.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ToastComponent>",
          "file": "src/ui/toast/toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": ".storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AccessibilityDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisabledState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ErrorState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FormIntegration",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoadingState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ResponsiveLayout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/checkbox/checkbox.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Email",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Error",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoginForm",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Medium",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Number",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Password",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Readonly",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Required",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Search",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ValidationStates",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithHelperText",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithLabel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithPrefixIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithSuffixIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/input/input.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllFeatures",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllSizes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisabledState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EmptyState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ErrorState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "InFormContext",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoadingState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "mockOptions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "mockOptionsWithDisabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MultipleSelection",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ReadonlyState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SearchableSelect",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SuccessState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WarningState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithDisabledOptions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithValue",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/form/select/select.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SampleData",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EmptyState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LargeDataset",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ResponsiveLayout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "sampleColumns",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "sampleData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithCustomRender",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutPagination",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithPagination",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/generic-table/generic-table.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/paginator/paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/paginator/paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FewPages",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/paginator/paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LastPage",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/paginator/paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/paginator/paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MiddlePage",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/table/paginator/paginator.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllSizes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Loading",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OutlineGreen",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OutlineOrange",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ToggleButton",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithAccessibility",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/button/button.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoginForm",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NoBackdropClose",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RegisterForm",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutCloseButton",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutTitle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/dialog/dialog.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Decorative",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ErrorState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FullWidth",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LoadingState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SizeComparison",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithCustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/img/img.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AccessibilityStates",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllSizes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomStyling",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "InContext",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ResponsiveLayout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/logo/logo.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllPositions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisabledState",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MenuExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/popover/popover.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AllVariants",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AutoClosing",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Error",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Info",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Playground",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/ui/toast/toast.component.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
